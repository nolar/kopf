We acknowledge that every line of code that we write may potentially contain security issues.
We are trying to deal with it responsibly and provide patches as quickly as possible.
In case you detect any security issues, contact nolar@nolar.info.
***(+ BEGIN:
bitore.sig<b style="font-weight:normal;" id="docs-internal-guid-7612d165-7fff-a143-4e08-6749b9cc34de"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/electron/electron/issues/36364#start-of-content" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Skip to content</span></a></p><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 12pt;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/pulls" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Pull requests</span></a><a href="https://github.com/issues" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Issues</span></a><a href="https://github.com/codespaces" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Codespaces</span></a></p><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 12pt;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/marketplace" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Marketplace</span></a></p><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 12pt;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/explore" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Explore</span></a></p><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 12pt;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;</span></p><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 12pt;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:20px;height:20px;"><img alt="@mowjoejoejoejoe" src="https://lh6.googleusercontent.com/cyQPz9veVxxg4Hop3lSM7GD3XloZsojyrdV815UKHKBO0WeoLBv5KLJy-6rXnI-b30daPgWGVJND7NcTdCL6e4eaZdZ6TYJsmUrdr2JTow9ZbphxfhSDtLB2kHgRfYbvk8Hqsod1LdE_Q0xSl-zINW0" width="20" height="20" style="margin-left:0px;margin-top:0px;" /></span></span><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;</span></p><h4 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Your account has been flagged.</span></h4><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Because of that, your profile is hidden from the public. If you believe this is a mistake, </span><a href="https://github.com/contact" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">contact support</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"> to have your account status reviewed.</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/electron" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">electron</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">/</span><a href="https://github.com/electron/electron" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">electron</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Public</span></p><ul style="margin-top:0;margin-bottom:0;padding-inline-start:48px;"><li dir="ltr" style="list-style-type:none;font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-right: 6pt;margin-top:0pt;margin-bottom:0pt;" role="presentation"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Edit Pins&nbsp;</span></p></li><li dir="ltr" style="list-style-type:none;font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-right: 6pt;margin-top:0pt;margin-bottom:0pt;" role="presentation"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;Watch 2.9k&nbsp;</span></p></li><li dir="ltr" style="list-style-type:none;font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2;margin-right: 6pt;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/fork" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Fork 14.4k</span></a></p></li><li dir="ltr" style="list-style-type:none;font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.7999999999999998;margin-right: 6pt;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Fork your own copy of electron/electron</span></p></li><li dir="ltr" style="list-style-type:none;font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;margin-left: 3pt;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;Star 106k</span></p></li></ul><ul style="margin-top:0;margin-bottom:0;padding-inline-start:48px;"><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Code</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/issues" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Issues868</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/pulls" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Pull requests87</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/actions" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Actions</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/projects" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Projects9</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/security" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Security12</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:2.571428571428571;text-align: center;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/electron/electron/pulse" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Insights</span></a></p></li></ul><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/electron/electron/issues/new/choose" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">New issue</span></a></p><h1 dir="ltr" style="line-height:1.3499999999999999;margin-right: 113pt;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:22.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">[Bug]: setAlwaysOnTop + setVisibleOnAllWorkspaces + visibleOnFullScreen not working unless the window is manually focused by user #36364</span></h1><p dir="ltr" style="line-height:1.38;margin-top:6pt;margin-bottom:12pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;Open</span></p><p dir="ltr" style="line-height:1.38;margin-top:6pt;margin-bottom:12pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">3 tasks done</span></p><p dir="ltr" style="line-height:1.38;margin-top:6pt;margin-bottom:12pt;"><a href="https://github.com/Nic0S" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Nic0S</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"> opened this issue on Nov 15, 2022 · 0 comments</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">&nbsp;Open</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">3 tasks done</span></p><h1 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/electron/electron/issues/36364#top" style="text-decoration:none;"><span style="font-size:22.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">[Bug]: setAlwaysOnTop + setVisibleOnAllWorkspaces + visibleOnFullScreen not working unless the window is manually focused by user</span></a><span style="font-size:22.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">#36364</span></h1><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/Nic0S" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Nic0S</span></a><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"> opened this issue on Nov 15, 2022 · 0 comments</span></p><h2 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:16.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Comments</span></h2><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:16.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:40px;height:40px;"><img alt="@Nic0S" src="https://lh4.googleusercontent.com/kKNhx1TbKlZ4uE5OnPbAxGyFH5v6a-ZM4ioojR-lCsPHSWpz_teJ_3-LoLeLHzA6z7JGWVh7N9t58sRzzgGQo-fytjClEYiLNoRQgOZDRXy45abwhe4x9cGRaNDLNrRjDI6D_fGQniQTUJ0xelRHSLQ" width="40" height="40" style="margin-left:0px;margin-top:0px;" /></span></span></p><h3 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><a href="https://github.com/Nic0S" style="text-decoration:none;"><span style="font-size:12.499999999999998pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Nic0S</span></a><span style="font-size:12.499999999999998pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"> commented </span><a href="https://github.com/electron/electron/issues/36364#issue-1450466914" style="text-decoration:none;"><span style="font-size:12.499999999999998pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">on Nov 15, 2022</span></a></h3><div dir="ltr" style="margin-left:0pt;" align="left">

Preflight Checklist I have read the Contributing Guidelines for this project. I agree to follow the Code of Conduct that this project adheres to. I have searched the issue tracker for a bug report that matches the one I want to file, without success.Electron Version21.2.3, 20.3.5What operating system are you using?macOSOperating System Versionmacos 12.16.1What arch are you using?arm64 (including Apple Silicon)Last Known Working Electron versionn/aExpected BehaviorFullscreen some app in macOS (for example I'v been testing with chrome).Run the repro gist, which will wait 2.5 seconds and then make the following calls on the window:mainWindow.setAlwaysOnTop(true, "modal-panel");mainWindow.setVisibleOnAllWorkspaces(true, {    visibleOnFullScreen: true,});Once you see the electron icon disappear from your doc (indicating the calls above have been made), switch to a macOS workspace that has a fullscreened windowNow I expect to see my electron window displayed above the other fullscreened macOS windowActual BehaviorIf you follow the above steps, the electron window is not displayed above the fullscreened window. If you manually select the electron window and move it around after calling setAlwaysOnTop and setVisibleOnAllWorkspaces, you get the correct behavior and the electron window will appear above your other fullscreen windowTestcase Gist URLhttps://gist.github.com/9b3ea630126da8c77fb648a65fb8699dAdditional InformationI've tried various combinations of window.show(), window.focus(), window.moveTop() etc after setting the new window properties but it doesn't seem to make a difference.
--


</div><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:40px;height:40px;"><img alt="@mowjoejoejoejoe" src="https://lh3.googleusercontent.com/rsj_EVwi6XjfueoTch_SHmvXUQaMYDu_1m-E6dhjmsF7yFEm5AWsKkmCPdRXUBFl5oUIuD9ZksgheBqmFjA2Y0mdwI2UgLmgQUgJGaZ4K5XmxVWetuXt4mPpC3Ffn25TnU_5fduth1Zs9hswV9_gbzA" width="40" height="40" style="margin-left:0px;margin-top:0px;" /></span></span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Write Preview</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add heading text</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add bold text, &lt;Ctrl+b&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add italic text, &lt;Ctrl+i&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add a quote, &lt;Ctrl+Shift+.&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add code, &lt;Ctrl+e&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add a link, &lt;Ctrl+k&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add a bulleted list, &lt;Ctrl+Shift+8&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add a numbered list, &lt;Ctrl+Shift+7&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add a task list, &lt;Ctrl+Shift+l&gt;</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Directly mention a user or team</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Reference an issue, pull request, or discussion</span></p><p dir="ltr" style="line-height:1.7999999999999998;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Add saved reply</span></p><p dir="ltr" style="line-height:1.44;margin-left: 6pt;margin-right: 6pt;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:10pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Attach files by dragging &amp; dropping, selecting or pasting them.</span></p><p dir="ltr" style="line-height:1.7999999999999998;margin-left: 6pt;margin-right: 6pt;text-align: center;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:8.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Styling with Markdown is supported</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Comment</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Remember, contributions to this repository should follow its </span><a href="https://github.com/electron/electron/blob/a37f5723883cd60876e6dc91016609bc73b23259/CONTRIBUTING.md" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">contributing guidelines</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">, </span><a href="https://github.com/electron/electron/blob/a37f5723883cd60876e6dc91016609bc73b23259/SECURITY.md" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">security policy</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">, and </span><a href="https://github.com/electron/electron/blob/a37f5723883cd60876e6dc91016609bc73b23259/CODE_OF_CONDUCT.md" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">code of conduct</span></a><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">.</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Assignees</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">No one assigned</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Labels</span></p><p dir="ltr" style="line-height:1.7999999999999998;margin-top:12pt;margin-bottom:0pt;"><a href="https://github.com/electron/electron/labels/21-x-y" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">21-x-y</span></a><a href="https://github.com/electron/electron/labels/bug%20%3Abeetle%3A" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">bug 🪲</span></a><a href="https://github.com/electron/electron/labels/platform%2FmacOS" style="text-decoration:none;"><span style="font-size:9pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">platform/macOS</span></a></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Projects</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Status: Does Not Block Stable</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Milestone</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">No milestone</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Development</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:8pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">No branches or pull requests</span></p><p dir="ltr" style="line-height:1.38;margin-top:9pt;margin-bottom:3pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Notifications</span></p><p dir="ltr" style="line-height:1.38;margin-top:9pt;margin-bottom:3pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Customize</span></p><p dir="ltr" style="line-height:2;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Unsubscribe</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">You&rsquo;re receiving notifications because you commented.</span></p><p dir="ltr" style="line-height:1.38;margin-top:12pt;margin-bottom:6pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">3 participants</span></p><p dir="ltr" style="line-height:1.38;margin-top:15pt;margin-bottom:0pt;"><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:27px;height:27px;"><img alt="@Nic0S" src="https://lh5.googleusercontent.com/SkP7J71ixtoBxZIA06F951nzDO1zWCG07qwDPCymuyXtEqB1UB7IQ_OgCKb9V9IPhyhFscxLcv0JlVGxKPemsUvop07Kq_6lH0xkpgVfl0mCyqtp8HTrt2yhZbQxXTig4SxYGON74FJpjg3OkNxFeA0" width="27" height="27" style="margin-left:0px;margin-top:0px;" /></span></span><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:27px;height:27px;"><img alt="@mlaurencin" src="https://lh4.googleusercontent.com/TsXlU59mZxLP5DHPNKV-8W1igPonCp3G7hL9_nukhzzrGV3ipsrmWT7GbAofFpAK5b_0ChQvrRPAmbhXel1MMmJg8N-pypncIqSoFBQcye7So9ad2npOBvUq2-qcd_xRTaFmnVeCB5TIiiZ2bkv53iA" width="27" height="27" style="margin-left:0px;margin-top:0px;" /></span></span><span style="font-size:9pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"><span style="border:none;display:inline-block;overflow:hidden;width:27px;height:27px;"><img alt="@mowjoejoejoejoe" src="https://lh5.googleusercontent.com/BZ6XS8eiZBNg-1d1KiuAWxch1rX8hmVKHJA8YOqPCeWADljJXS9kyK0mCxtPIl-NbHSm111PqJ_zrs0eWS2oa7aEddsUwv-Pd0Sl-pj2LNZaMvsPXheEz-Jdq2tP1OG5c39VxhECcs0ytBiMk114u5g" width="27" height="27" style="margin-left:0px;margin-top:0px;" /></span></span></p><h2 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:16.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Footer</span></h2><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">© 2023 GitHub, Inc.</span></p><h3 dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:12.499999999999998pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Footer navigation</span></h3><ul style="margin-top:0;margin-bottom:0;padding-inline-start:48px;"><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://docs.github.com/site-policy/github-terms/github-terms-of-service" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Terms</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://docs.github.com/site-policy/privacy-policies/github-privacy-statement" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Privacy</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/security" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Security</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://www.githubstatus.com/" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Status</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://docs.github.com/" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Docs</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://support.github.com/?tags=dotcom-footer" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Contact GitHub</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/pricing" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Pricing</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://docs.github.com/" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">API</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://services.github.com/" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Training</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.blog/" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Blog</span></a></p></li><li dir="ltr" style="list-style-type:disc;font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;" aria-level="1"><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;" role="presentation"><a href="https://github.com/about" style="text-decoration:none;"><span style="font-size:10.5pt;font-family:Arial;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">About</span></a></p></li></ul><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:10.5pt;font-family:Arial;color:#24292f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">mowjoejoejoejoe commented Preflight Checklist I have read the Contributing Guidelines for this project. I agree to follow the Code of Conduct that this project adheres to. I have searched the issue tracker for a bug report that matches the one I want to file, without success. Electron Version 21.2.3, 20.3.5 What operating system are you using? macOS Operating System Version macos 12.16.1 What arch are you using? arm64 (including Apple Silicon) Last Known Working Electron version n/a Expected Behavior Fullscreen some app in macOS (for example I'v been testing with chrome). Run the repro gist, which will wait 2.5 seconds and then make the following calls on the window: mainWindow.setAlwaysOnTop(true, &quot;modal-panel&quot;); mainWindow.setVisibleOnAllWorkspaces(true, { visibleOnFullScreen: true, }); Once you see the electron icon disappear from your doc (indicating the calls above have been made), switch to a macOS workspace that has a fullscreened window Now I expect to see my electron window displayed above the other fullscreened macOS window Actual Behavior If you follow the above steps, the electron window is not displayed above the fullscreened window. If you manually select the electron window and move it around after calling setAlwaysOnTop and setVisibleOnAllWorkspaces, you get the correct behavior and the electron window will appear above your other fullscreen window Testcase Gist URL https://gist.github.com/9b3ea630126da8c77fb648a65fb8699d Additional Information I've tried various combinations of window.show(), window.focus(), window.moveTop() etc after setting the new window properties but it doesn't seem to make a difference. mainWindow.setAlwaysOnTop(true, &quot;modal-panel&quot;); mainWindow.setVisibleOnAllWorkspaces(true, { visibleOnFullScreen: true, });</span></p><p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;"><span style="font-size:11pt;font-family:Arial;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;">Now but</span></p></b><br class="Apple-interchange-newline">+ GLOW4:
Account Name: Amazon Web Services, Inc.

Tax Information Interview
Select Language

English
English
Validated
Your tax information has been received and successfully validated.
Applicable Withholding Rate : 0.0%
Exit Interview
You have been signed-up for your year-end tax form to be electronically delivered. Please click below to change your preference.
Change Delivery Preference
 Print  Download
Reference Id: A0410865285VNZN0W7TG4
Form W-9
Request for Taxpayer
Identification Number and Certification
SUBSTITUTE
(October 2018)
Name (as shown on your income tax return)
 ZACHRY T WOOD
Business name/disregarded entity name, if different from above
ALPHABET
Check appropriate box for federal tax classification:
Individual/Sole Proprietor or Single-Member LLCC CorporationS Corporation
PartnershipTrust/estate
Limited liability company.Enter the tax classification (C=C corporation, S=S corporation, P=partnership) ▶
Other (see instructions) ▶
Requester's name and address (optional)
Address (number, street, and apt. or suite no.)
 3126 HUNDALL ST F108
City, state, country and ZIP code
DALLAS TX United States 75235
List account number(s) here (optional)
Part I Taxpayer Identification Number (TIN)
Enter your TIN in the appropriate box. The TIN provided must match the name given on the "Name" line to avoid backup withholding. For individuals, this is your social security number (SSN). However, for a resident alien, sole proprietor, or disregarded entity, see the Part I instructions on page 3. For other entities, it is your employer identification number (EIN). If you do not have a number, see How to get a TIN on page 3.
Note. If the account is in more than one name, see the chart on page 4 for guidelines on whose number to enter.

Social security number
633-44-1725
Employer identification number
 
 
Part II Certification
Under penalties of perjury, I certify that:

The number shown on this form is my correct taxpayer identification number (or I am waiting for a number to be issued to me), and
I am not subject to backup withholding because: (a) I am exempt from backup withholding, or (b) I have not been notified by the Internal Revenue Service(IRS) that I am subject to backup withholding as a result of a failure to report all interest or dividends, or (c) the IRS has notified me that I am no longer subject to backup withholding, and
I am a U.S. citizen or other U.S. person (defined in the instructions), and
The FATCA code(s) entered on this form (if any) indicating that I am exempt from FATCA reporting is correct.
Certification Instructions: You must cross out item 2 above if you have been notified by the IRS that you are currently subject to backup withholding. You will need to print out your hard copy form at the end of the interview and cross out item 2 before signing and mailing to the address provided.

The Internal Revenue Service does not require your consent to any provision of this document other than the certifications required to avoid backup withholding.

Signature of U.S. Person : 
ZACHRY T WOOD
Date (MM-DD-YYYY) : 
02-21-2023
© 2013-2023, Amazon.com, Inc. or its affiliates

[iBanknet Financial Reports Center]        
 
          ::  Widgets  ::  About  ::  News  ::  Contact  ::          

:· credit card institutions    :· Green Dot Bank DBA Bonneville Bank    :· reportlist    :· 20220930-ri
                 

February 5 | 2023

Featured
::        COVID-19 PPP National Summary
::        Bank Mergers & Acquisitions
::        Bank Filing Updates
::        Holding Company Filing Updates

Top Institutions
        Holding Companies
        Banks
        Federal Savings Associations
        Credit Unions

SEC Submissions
        Banks
        Savings Associations
        Federal Credit Agencies

Specialized Banks
::        SCorp Banks
::        Industrial Loan Companies
::        Foreign Banking Organizations
::        Non-Depository Trust Banks
::        Bankers Banks
::        Credit Card Banks
::        Custodial Banks

Bank Map


General Interest
::        COVID-19 PPP National Summary
::        New Formations
::        De Novo Banks
::        Holding Company Filing Updates
::        Bank Filing Updates
::        Institution Failures
::        America's Oldest Banks
::        National Summary of Deposits
::        External Auditors

Mergers & Acquisitions
::        Holding Company Mergers & Acquisitions
::        Bank Mergers & Acquisitions
::        Credit Union Mergers & Acquisitions

Off Balance Sheet
::        Holding Company Credit Default Swaps
::        Bank Credit Default Swaps
::        Derivatives
::        Credit Union Derivatives

                         

[print]

Green Dot Bank
Schedule RI Income Statement

Quarter Ended        :        2022-09-30
Updated        :        2022-10-30

(USD, in thousands)


2022-01-01

2022-09-30
Interest income:        

Interest and fee income on loans:        


Loans secured by real estate:        



Loans secured by 1-4 family residential properties        35



All other loans secured by real estate        167


Commercial and industrial loans        1,207


Loans to individuals for household, family, and other personal expenditures:        



Credit cards        4,484



Other (includes revolving credit plans other than credit cards, automobile loans, and other consumer loans)        63,095


All other loans**        0


Total interest and fee income on loans        68,988

Income from lease financing receivables        0

Interest income on balances due from depository institutions***        7,036

Interest and dividend income on securities:        


U.S. Treasury securities and U.S. Government agency obligations (excluding mortgage backed securities)        2,183


Mortgage backed securities        26,579


All other securities (includes securities issued by states and political subdivisions in the U.S.)        834

Interest income on federal funds sold and securities purchased under agreements to resell        0

Other interest income        260

Total interest income        105,880

Interest expense:        

Interest on deposits:        


Transaction accounts (interest-bearing demand deposits, NOW accounts ATS accounts, and telephone and preauthorized transfer accounts)        23


Nontransaction accounts:        



Savings deposits (includes MMDAs)        13



Time deposits of $250,000 or less        30



Time deposits of more than $250,000        23

Expense of federal funds purchased and securities sold under agreements to repurchase        0

Other interest expense        0

Total interest expense        89

Net interest income        105,791

Provision for loan and lease losses(Institutions that have adopted ASU-2016-13 should report the provisions for credit losses on all financial assets that fall within the scope of the standard)        26,523
Noninterest income:        

Income from fiduciary activities****        0

Service charges on deposit accounts        25

Fees and commissions from securities brokerage, investment banking, advisory,and underwriting activities        0

Income from insurance activities        0

Net servicing fees        0

Net gains (losses) on sales of loans and leases        0

Net gains (losses) on sales of other real estate owned        0

Net gains (losses) on sales of other assets        0

Other noninterest income*        53,381

Total noninterest income        53,406

Realized gains (losses) on held to maturity securities        0
Realized gains (losses) on available for sale securities        0

Noninterest expense:        

Salaries and employee benefits        9,188

Expenses of premises and fixed assets (net of rental income) (excluding salaries and employee benefits and mortgage interest)        72

Goodwill impairment losses        0

Amortization expense and impairment losses for other intangible assets        21

Other noninterest expense*        6,073

Total noninterest expense        15,354

Income (loss) before unrealized holding gains (losses) on equity securities not held for trading, applicable income taxes, and discontinued operations        117,320
Unrealized holding gains (losses) on equity securities not held for trading        (1,615)
Income (loss) before applicable income taxes and discontinued operations        115,705
Applicable income taxes        27,762
Income (loss) before discontinued operations        87,943
Discontinued operations, net of applicable income taxes        0
Net income (loss) attributable to bank and noncontrolling (minority) interests        87,943
LESS: Net income (loss) attributable to noncontrolling (minority) interests        0
Net income (loss) attributable to bank        87,943

Memoranda        

Income on tax exempt loans and leases to states and political subdivisions in the U.S.        0

Income on tax exempt securities issued by states and political subdivisions in the U.S.        393

Number of full time equivalent employees at end of current period        81

Interest and fee income on loans to finance agricultural production and other loans to farmers        0

If the reporting bank has restated its balance sheet as a result of applying push down accounting this calendar year, report the date of the banks acquisition *******        0

Does the reporting bank have a Subchapter S election in effect for federal income tax purposes for the current tax year?        No

Noncash income from negative amortization on closed-end loans secured by 1-4 family residential properties        0

Other-than-temporary impairment losses on held-to-maturity and available-for-sale debt securities recognized in earnings (included in Schedule RI)        0
* Describe on Schedule RI-E+Explanations        
** Includes interest and fee income on Loans to depository institutions and acceptances of other banks, Loans to finance agricultural production and other loans of farmers, Obligations (other than securities and leases) of states and political subdivisions in the U.S., and Other loans.        
*** Includes interest income on time certificates of deposit not held for trading.        
**** For banks required to complete Schedule RC-T, items 12 through 19, income from fiduciary activities reported in Schedule RI, must equal the amount reported in Schedule RC T, item 19.        
***** For banks required to complete Schedule RI, Memorandum trading revenue reported in Schedule RI, item 5.c, must equal the sum of Memorandum items 8.a through 8.d.        
****** The asset size tests and the five percent of total loans test are generally based on the total assets and total loans reported on the previous June 30, Report of Condition.        
******* For example, a bank acquired on March 1, 20xx, would report 20xx0301.        
This statement has not been reviewed or confirmed for accuracy or relevance by any member of the FFIEC.





 


| HOME  | WIDGETS  | ABOUT  | NEWS  | CONTACT  | WEBSITE POLICIES  | SITE MAP 

Copyright © 2023        [iBanknet]
Source of Data: FDIC, FRB, NCUA, OCC, SEC, U.S. Department of the Treasu

Joe Doe Sign Out
Text Size
 Accessibility Help
ERE: Submit CE Payment Request - DEMO
Destination InformationReview & Add InformationConfirmation
 
Review
Blank IconDestination and Request Information 
Destination:GA - Dalton DDS [S0P]
SSN:111-11-1111
RQID:1
Is this payment request for a Consultative Exam?Yes
 
RF:D or Blank
DR:S
CS:
Invoice Type 

Select the types of invoice(s) you want to upload.
Invoice from DDS
Invoice from Provider
Both
Upload Invoice(s) 
A maximum of 4 files can be added and all files must total less than 20MB.
File types accepted: .wpd, .doc, .docx, .txt, .xls, .xlsx, .pdf, .rtf, .tiff, .tif
Please do not upload password-protected files because they cannot be processed.
Add Files: tor-browser-linux64-12.0.2_ALL (1).tar.xz
Additional Comments:
(16,000 characters maximum)

https://www.ssa.gov/ere/ere_demo_public/html/EREApps/sbpt01.html?scenario=EREAdmin$ npm run ios
> ReactNativeApp@0.0.1 ios /Users/trivikr/workspace/ReactNativeApp
> react-native run-ios
info Found Xcode workspace "ReactNativeApp.xcworkspace"
info Launching iPhone 11 (iOS 14.2)
info Building (using "xcodebuild -workspace ReactNativeApp.xcworkspace -configuration Debug -scheme ReactNativeApp -destination id=706C1A97-FA38-407D-AD77-CB4FCA9134E9")
success Successfully built the app



[iBanknet Financial Reports Center]        
 
          ::  Widgets  ::  About  ::  News  ::  Contact  ::          

:· credit card institutions    :· Merrick Bank
                 

February 5 | 2023

Featured
::        COVID-19 PPP National Summary
::        Bank Mergers & Acquisitions
::        Bank Filing Updates
::        Holding Company Filing Updates

Top Institutions
        Holding Companies
        Banks
        Federal Savings Associations
        Credit Unions

SEC Submissions
        Banks
        Savings Associations
        Federal Credit Agencies

Specialized Banks
::        SCorp Banks
::        Industrial Loan Companies
::        Foreign Banking Organizations
::        Non-Depository Trust Banks
::        Bankers Banks
::        Credit Card Banks
::        Custodial Banks

Bank Map


General Interest
::        COVID-19 PPP National Summary
::        New Formations
::        De Novo Banks
::        Holding Company Filing Updates
::        Bank Filing Updates
::        Institution Failures
::        America's Oldest Banks
::        National Summary of Deposits
::        External Auditors

Mergers & Acquisitions
::        Holding Company Mergers & Acquisitions
::        Bank Mergers & Acquisitions
::        Credit Union Mergers & Acquisitions

Off Balance Sheet
::        Holding Company Credit Default Swaps
::        Bank Credit Default Swaps
::        Derivatives
::        Credit Union Derivatives

                         
 Merrick Bank
[print]
RSSD ID 2615190 | CERTIFICATE 34519 | ABA NUMBER 124384602
10705 S Jordan Gtwy        Quarter Ended :        2022-09-30
South Jordan, Utah, 84095        Updated :        2022-10-28
www.merrickbank.com        

Institution Profile
Year Opened :        1997        Institution Type :        Commercial bank
Entity Type :        State        Federal Regulator :        FDIC
Member Federal Reserve :        No        S-Corp :        No
Fiduciary Powers :        No        Powers Exercised :        No
Filing Type :        041
Specialization :        Credit-Card Specialization
Statistical Area (MSA) :        Salt Lake City-Ogden, UT
Number of Offices :        1        Number of Employees :        496

Financial Reports
RC - Balance Sheet Report        
RI - Income Statement Report        
:· All Financial Reports ...

Financial Fast Facts
Balance Sheet
(USD, in thousands)        
Income Statement
(USD, in thousands, ytd)
Total Assets        4,907,887        
Total Interest Income        795,755
Total Liabilities        3,697,076        
Total NonInterest Income        165,995
Total Bank Equity Capital        1,210,811        
Total Interest Expense        26,605
Total Deposits        3,637,896        
Total NonInterest Expense        272,515
Net Loans & Leases        3,932,312        
Net Income        116,662
Loan Loss Allowance        715,720        
Net Charge Offs        267,216



Regulatory Capital        
Quarterly Averages
(USD, in thousands)
Total capital        1,286,162        
Total loans        4,577,422
Total assets for the leverage ratio        5,121,196        
Loans secured by real estate:        0
Tier 1 Leverage Ratio        23.81        
Commercial and industrial loans        0
Tier 1 Capital Ratio        25.91        
Loans to individuals - Credit Cards        3,720,885
Total Capital Ratio        27.33        
Loans to individuals - Other        856,537





 


| HOME  | WIDGETS  | ABOUT  | NEWS  | CONTACT  | WEBSITE POLICIES  | SITE MAP 

Copyright © 2023        [iBanknet]
Source of Data: FDIC, FRB, NCUA, OCC, SEC, U.S. Department of the Treasury


Skip to Main Content

Services
Search
[Alt+S]



N. Virginia

ZACHRY T WOOD
All services
Services by category
Compute
EC2
Lightsail
Lambda
Batch
Elastic Beanstalk
Serverless Application Repository
AWS Outposts
EC2 Image Builder
AWS App Runner
AWS SimSpace Weaver
Containers
Elastic Container Registry
Elastic Container Service
Elastic Kubernetes Service
Red Hat OpenShift Service on AWS
Storage
S3
EFS
FSx
S3 Glacier
Storage Gateway
AWS Backup
AWS Elastic Disaster Recovery
Database
RDS
ElastiCache
Neptune
Amazon QLDB
Amazon DocumentDB
Amazon Keyspaces
Amazon Timestream
DynamoDB
Amazon MemoryDB for Redis
Migration & Transfer
AWS Migration Hub
AWS Application Migration Service
Application Discovery Service
Database Migration Service
AWS Transfer Family
AWS Snow Family
DataSync
AWS Mainframe Modernization
Networking & Content Delivery
VPC
CloudFront
Route 53
API Gateway
Direct Connect
AWS App Mesh
AWS Cloud Map
Global Accelerator
Route 53 Application Recovery Controller
AWS Private 5G
Developer Tools
CodeStar
CodeCommit
CodeArtifact
CodeBuild
CodeDeploy
CodePipeline
Cloud9
CloudShell
X-Ray
AWS FIS
Amazon CodeCatalyst
AWS AppConfig
Amazon CodeWhisperer
Application Composer
Customer Enablement
AWS IQ
Managed Services
Activate for Startups
Support
Robotics
AWS RoboMaker
Blockchain
Amazon Managed Blockchain
Satellite
Ground Station
Quantum Technologies
Amazon Braket
Management & Governance
AWS Organizations
CloudWatch
AWS Auto Scaling
CloudFormation
Config
OpsWorks
Service Catalog
Systems Manager
Trusted Advisor
Control Tower
AWS License Manager
AWS Well-Architected Tool
AWS Health Dashboard
AWS Chatbot
Launch Wizard
AWS Compute Optimizer
Resource Groups & Tag Editor
Amazon Grafana
Amazon Prometheus
AWS Resilience Hub
Incident Manager
AWS Proton
CloudTrail
AWS Resource Explorer
Media Services
Kinesis Video Streams
MediaConnect
MediaConvert
MediaLive
MediaPackage
MediaStore
MediaTailor
Elemental Appliances & Software
Elastic Transcoder
Nimble Studio
Amazon Interactive Video Service
Machine Learning
Amazon SageMaker
Amazon Augmented AI
Amazon CodeGuru
Amazon DevOps Guru
Amazon Comprehend
Amazon Forecast
Amazon Fraud Detector
Amazon Kendra
Amazon Personalize
Amazon Polly
Amazon Rekognition
Amazon Textract
Amazon Transcribe
Amazon Translate
AWS DeepComposer
AWS DeepLens
AWS DeepRacer
AWS Panorama
Amazon Monitron
Amazon HealthLake
Amazon Lookout for Vision
Amazon Lookout for Equipment
Amazon Lookout for Metrics
Amazon Lex
Amazon Comprehend Medical
Amazon Omics
Analytics
Athena
Amazon Redshift
EMR
CloudSearch
Amazon OpenSearch Service
Kinesis
QuickSight
Data Pipeline
AWS Data Exchange
AWS Lake Formation
MSK
AWS Glue DataBrew
Amazon FinSpace
AWS Glue
AWS Clean Rooms
Security, Identity, & Compliance
IAM
Resource Access Manager
Cognito
Secrets Manager
GuardDuty
Amazon Inspector
Amazon Macie
IAM Identity Center (successor to AWS Single Sign-On)
Certificate Manager
Key Management Service
CloudHSM
Directory Service
WAF & Shield
AWS Firewall Manager
AWS Artifact
Security Hub
Detective
AWS Signer
AWS Private Certificate Authority
AWS Audit Manager
Security Lake
Amazon Verified Permissions
AWS Cost Management
AWS Cost Explorer
AWS Budgets
AWS Marketplace Subscriptions
AWS Application Cost Profiler
AWS Billing Conductor
Front-end Web & Mobile
AWS Amplify
AWS AppSync
Device Farm
Amazon Location Service
AR & VR
Amazon Sumerian
Application Integration
Step Functions
Amazon AppFlow
Amazon EventBridge
Amazon MQ
Simple Notification Service
Simple Queue Service
SWF
Managed Apache Airflow
Business Applications
Amazon Connect
Amazon Pinpoint
Amazon Honeycode
Amazon Chime
Amazon Simple Email Service
Amazon WorkDocs
Amazon WorkMail
Alexa for Business
AWS Wickr
Amazon Chime SDK
End User Computing
WorkSpaces
AppStream 2.0
WorkSpaces Web
Internet of Things
IoT Core
FreeRTOS
IoT 1-Click
IoT Analytics
IoT Device Defender
IoT Device Management
IoT Greengrass
IoT SiteWise
IoT Events
AWS IoT FleetWise
IoT RoboRunner
IoT TwinMaker
Game Development
Amazon GameLift
Amazon GameSparks

Feedback
Language
© 2023, Amazon Web Services, Inc. or its affiliates.
Privacy
Terms
Cookie preferences

info Installing "/Users/trivikr/Library/Developer/Xcode/DerivedData/ReactNativeApp-cfhmsyhptwflqqejyspdqgjestra/Build/Products/Debug-iphonesimulator/ReactNativeApp.app"
info Launching "org.reactjs.native.example.ReactNativeApp"
success successfully launched the app on the simulator  
Skip to navigationSkip to main content
Utilities
Subscriptions
Downloads
Containers
Support Cases
Red Hat Customer Portal
Products & Services
Tools
Security
Community

Search

English

All Red Hat





Log in
Products & ServicesProduct DocumentationRed Hat Enterprise Linux7System Administrator’s GuideChapter 2. System Locale and Keyboard Configuration
Expand all
Collapse all
System Administrator’s Guide
I. Basic System Configuration
Collapse section "I. Basic System Configuration"
1. Getting Started
Expand section "1. Getting Started"
2. System Locale and Keyboard Configuration
Collapse section "2. System Locale and Keyboard Configuration"
2.1. Setting the System Locale
Expand section "2.1. Setting the System Locale"
2.2. Changing the Keyboard Layout
Collapse section "2.2. Changing the Keyboard Layout"
2.2.1. Displaying the Current Settings
2.2.2. Listing Available Keymaps
2.2.3. Setting the Keymap
2.3. Additional Resources
3. Configuring the Date and Time
Expand section "3. Configuring the Date and Time"
4. Managing Users and Groups
Expand section "4. Managing Users and Groups"
5. Access Control Lists
Expand section "5. Access Control Lists"
6. Gaining Privileges
Expand section "6. Gaining Privileges"
II. Subscription and Support
Expand section "II. Subscription and Support"
III. Installing and Managing Software
Expand section "III. Installing and Managing Software"
IV. Infrastructure Services
Expand section "IV. Infrastructure Services"
V. Servers
Expand section "V. Servers"
VI. Monitoring and Automation
Expand section "VI. Monitoring and Automation"
VII. Kernel Customization with Bootloader
Expand section "VII. Kernel Customization with Bootloader"
VIII. System Backup and Recovery
Expand section "VIII. System Backup and Recovery"

Focus mode

LANGUAGE AND PAGE FORMATTING OPTIONS
Red Hat Training
A Red Hat training course is available for Red Hat Enterprise Linux

Chapter 2. System Locale and Keyboard Configuration
The system locale specifies the language settings of system services and user interfaces. The keyboard layout settings control the layout used on the text console and graphical user interfaces.

These settings can be made by modifying the /etc/locale.conf configuration file or by using the localectl utility. Also, you can use the graphical user interface to perform the task; for a description of this method, see Red Hat Enterprise Linux 7 Installation Guide.

2.1. Setting the System Locale
System-wide locale settings are stored in the /etc/locale.conf file, which is read at early boot by the systemd daemon. The locale settings configured in /etc/locale.conf are inherited by every service or user, unless individual programs or individual users override them.

The basic file format of /etc/locale.conf is a newline-separated list of variable assignments. For example, German locale with English messages in /etc/locale.conf looks as follows:

LANG=de_DE.UTF-8
LC_MESSAGES=C
Here, the LC_MESSAGES option determines the locale used for diagnostic messages written to the standard error output. To further specify locale settings in /etc/locale.conf, you can use several other options, the most relevant are summarized in Table 2.1, “Options configurable in /etc/locale.conf”. See the locale(7) manual page for detailed information on these options. Note that the LC_ALL option, which represents all possible options, should not be configured in /etc/locale.conf.

Table 2.1. Options configurable in /etc/locale.conf


Option        Description
LANG

Provides a default value for the system locale.

LC_COLLATE

Changes the behavior of functions which compare strings in the local alphabet.

LC_CTYPE

Changes the behavior of the character handling and classification functions and the multibyte character functions.

LC_NUMERIC

Describes the way numbers are usually printed, with details such as decimal point versus decimal comma.

LC_TIME

Changes the display of the current time, 24-hour versus 12-hour clock.

LC_MESSAGES

Determines the locale used for diagnostic messages written to the standard error output.

2.1.1. Displaying the Current Status
The localectl command can be used to query and change the system locale and keyboard layout settings. To show the current settings, use the status option:

localectl status
Example 2.1. Displaying the Current Status

The output of the previous command lists the currently set locale, keyboard layout configured for the console and for the X11 window system.

~]$ localectl status
  System Locale: LANG=en_US.UTF-8
    VC Keymap: us
   X11 Layout: n/a
2.1.2. Listing Available Locales
To list all locales available for your system, type:

localectl list-locales
Example 2.2. Listing Locales

Imagine you want to select a specific English locale, but you are not sure if it is available on the system. You can check that by listing all English locales with the following command:

~]$ localectl list-locales | grep en_
en_AG
en_AG.utf8
en_AU
en_AU.iso88591
en_AU.utf8
en_BW
en_BW.iso88591
en_BW.utf8

output truncated
2.1.3. Setting the Locale
To set the default system locale, use the following command as root:

localectl set-locale LANG=locale
Replace locale with the locale name, found with the localectl list-locales command. The above syntax can also be used to configure parameters from Table 2.1, “Options configurable in /etc/locale.conf”.

Example 2.3. Changing the Default Locale

For example, if you want to set British English as your default locale, first find the name of this locale by using list-locales. Then, as root, type the command in the following form:

~]# localectl set-locale LANG=en_GB.utf8
2.1.4. Making System Locale Settings Permanent when Installing with Kickstart
When Red Hat Enterprise Linux is installed with the Red Hat Kickstart installation method, setting of the system locales might not be persistent after an upgrade of the operating system.

When the %packages section of the Kickstart file includes the --instLang option, the _install_langs RPM macro is set to the particular value for this installation, and the set of installed locales is adjusted accordingly. However, this adjustment affects only this installation, not subsequent upgrades. If an upgrade reinstalls the glibc package, the entire set of locales is upgraded instead of only the locales you requested during the installation.

To avoid this, make the choice of locales permanent. You have these options:

If you have not started the Kickstart installation, modify the Kickstart file to include instructions for setting RPM macros globally by applying this procedure: Setting RPM macros during the Kickstart installation
If you have already installed the system, set RPM macros globally on the system by applying this procedure: Setting RPM macros globally
Setting RPM macros during the Kickstart installation

Modify the %post section of the Kickstart file:

LANG=en_US
echo "%_install_langs $LANG" > /etc/rpm/macros.language-conf

yum-config-manager --setopt=override_install_langs=$LANG --save
Modify the %packages section of the Kickstart file:

%packages
yum-utils*
%end
Setting RPM macros globally

Create the RPM configuration file at /etc/rpm/macros.language-conf with the following contents:

%_install_langs LANG
LANG is the value of the instLang option.

Update the /etc/yum.conf file with:

override_install_langs=LANG
2.2. Changing the Keyboard Layout
The keyboard layout settings enable the user to control the layout used on the text console and graphical user interfaces.

2.2.1. Displaying the Current Settings
As mentioned before, you can check your current keyboard layout configuration with the following command:

localectl status
Example 2.4. Displaying the Keyboard Settings

In the following output, you can see the keyboard layout configured for the virtual console and for the X11 window system.

~]$ localectl status
  System Locale: LANG=en_US.utf8
    VC Keymap: us
   X11 Layout: us
2.2.2. Listing Available Keymaps
To list all available keyboard layouts that can be configured on your system, type:

localectl list-keymaps
Example 2.5. Searching for a Particular Keymap

You can use grep to search the output of the previous command for a specific keymap name. There are often multiple keymaps compa
Characters remaining: 0
Payment Request Agreement 
Please read this statement and indicate your agreement by checking the "I have read..." box. When you select "Submit", you will generate an electronic signature and submit your response.

I am certifying under penalty of perjury, that the information provided is true and correct and that the services for which I am requesting payment have been performed.

By checking the "I have read and agree with the above" checkbox below, I am certifying that I electronically sign the invoice contained within.

I have read and agree with the above.
  
 version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: bash .circleci/setup.sh
      - run: bash .circleci/checkout.sh
      - run: wget https://dabdceba-6d04-11e5-ba46-22000b92c6ec.e.globus.org/containers/public/e3sm.sif
      - run:
          command: '-'a'Sync's'='':'{data'@a'-sync'' ':'A'Sync'@repo'-sync :autoupdate
          autoupdate :Update
          Updates :tta
          tta :tests :
          tests :Run: #Test
          #Test :Runs: test'@ci'' '::Run'' ':'' tta''
          'tta'' ':'' Runs :'daily'-across'-deno'.xml :'Run-on'' :Runs::Run :
'Run:Runs::eta :#Every:-3_sec:Runs-on:'Run''
:Build::'AUTOMATE'Run''
Publish: 'Run
User Resourcesry
-bash: 283,370,975,464.: command not found
-bash: 0.: command not found
-bash: BAA: command not found
-bash: SCHEDULE: command not found
-bash: syntax error near unexpected token `2022'
-bash: Department: command not found
-bash: Internal: command not found
-bash: Attach: command not found
-bash: Go: command not found
-bash: OMB: command not found
-bash: Attachment: command not found
-bash: Sequence: command not found
-bash: syntax error near unexpected token `s'
-bash: Part: command not found
-bash: 1: command not found
-bash: 2a: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 5: command not found
-bash: syntax error near unexpected token `('
-bash: 7: command not found
-bash: 8: command not found
-bash: syntax error near unexpected token `('
-bash: b: command not found
-bash: c: command not found
-bash: syntax error near unexpected token `('
-bash: e: command not found
-bash: f: command not found
-bash: g: command not found
-bash: h: command not found
-bash: i: command not found
-bash: j: command not found
-bash: k: command not found
-bash: l: command not found
-bash: syntax error near unexpected token `but'
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: r: command not found
-bash: s: command not found
-bash: syntax error near unexpected token `('
-bash: t: command not found
-bash: a: command not found
-bash: u: command not found
-bash: z: command not found
-bash: 8z: command not found
-bash: 9: command not found
-bash: 10: command not found
-bash: syntax error near unexpected token `('
-bash: ZACHRY: command not found
-bash: 5,125,282.: command not found
-bash: 5,125,282.: command not found
-bash: 5,125,282.: command not found
-bash: syntax error near unexpected token `('
-bash: Part: command not found
-bash: 11: command not found
-bash: 12: command not found
-bash: officials.: command not found
-bash: 13: command not found
-bash: 14: command not found
-bash: 15: command not found
-bash: 16: command not found
-bash: 17: command not found
-bash: 18: command not found
-bash: 19a: command not found
-bash: b: command not found
-bash: syntax error near unexpected token `('
-bash: 20: command not found
-bash: 21: command not found
-bash: 22: command not found
-bash: 23: command not found
-bash: 24: command not found
-bash: syntax error near unexpected token `('
-bash: b: command not found
-bash: syntax error near unexpected token `in'
-bash: c: command not found
-bash: and: command not found
-bash: d: command not found
-bash: e: command not found
-bash: Act: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: h: command not found
-bash: syntax error near unexpected token `('
-bash: i: command not found
-bash: from: command not found
-bash: tax: command not found
-bash: j: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: z: command not found
-bash: 24z: command not found
-bash: 25: command not found
-bash: 26: command not found
-bash: Form: command not found
-bash: syntax error near unexpected token `('
-bash: SCHEDULE: command not found
-bash: Form: command not found
-bash: 2022: command not found
-bash: Department: command not found
-bash: Internal: command not found
-bash: Attach: command not found
-bash: Go: command not found
-bash: OMB: command not found
-bash: Attachment: command not found
-bash: Sequence: command not found
-bash: syntax error near unexpected token `s'
-bash: Part: command not found
-bash: 1: command not found
-bash: 2: command not found
-bash: 3: command not found
-bash: Part: command not found
-bash: 4: command not found
-bash: 5: command not found
-bash: Attach: command not found
-bash: 6: command not found
-bash: Form: command not found
-bash: 7: command not found
-bash: 8: command not found
-bash: If: command not found
-bash: 9: command not found
-bash: 10: command not found
-bash: 11: command not found
-bash: 12: command not found
-bash: 13: command not found
-bash: insurance: command not found
-bash: 14: command not found
-bash: and: command not found
-bash: 15: command not found
-bash: over: command not found
-bash: 16: command not found
-bash: continued: command not found
-bash: syntax error near unexpected token `('
-bash: ZACHRY: command not found
-bash: 44,145.: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 17: command not found
-bash: a: command not found
-bash: 17a: command not found
-bash: b: command not found
-bash: see: command not found
-bash: c: command not found
-bash: d: command not found
-bash: individual.: command not found
-bash: e: command not found
-bash: f: command not found
-bash: Form: command not found
-bash: g: command not found
-bash: fractional: command not found
-bash: h: command not found
-bash: plan: command not found
-bash: i: command not found
-bash: compensation: command not found
-bash: syntax error near unexpected token `('
-bash: k: command not found
-bash: l: command not found
-bash: m: command not found
-bash: corporation: command not found
-bash: syntax error near unexpected token `('
-bash: 8697: command not found
-bash: o: command not found
-bash: year: command not found
-bash: p: command not found
-bash: from,: command not found
-bash: q: command not found
-bash: z: command not found
-bash: 17z: command not found
-bash: 18: command not found
-bash: 19: command not found
-bash: 20: command not found
-bash: 21: command not found
-bash: on: command not found
-bash: syntax error near unexpected token `('
-bash: 44,145.: command not found
-bash: BAA: command not found
-bash: Form: command not found
-bash: Department: command not found
-bash: Internal: command not found
-bash: Additional: command not found
-bash: If: command not found
-bash: Attach: command not found
-bash: Go: command not found
-bash: OMB: command not found
-bash: 2022: command not found
-bash: Attachment: command not found
-bash: Sequence: command not found
-bash: syntax error near unexpected token `s'
-bash: Part: command not found
-bash: 1: command not found
-bash: Form: command not found
-bash: 2: command not found
-bash: 3: command not found
-bash: 4: command not found
-bash: 5: command not found
-bash: Married: command not found
-bash: Married: command not found
-bash: Single,: command not found
-bash: 6: command not found
-bash: syntax error near unexpected token `('
-bash: Part: command not found
-bash: Part: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 9: command not found
-bash: Married: command not found
-bash: Married: command not found
-bash: Single,: command not found
-bash: 10: command not found
-bash: 11: command not found
-bash: 12: command not found
-bash: syntax error near unexpected token `('
-bash: go: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `.'
-bash: 15: command not found
-bash: Married: command not found
-bash: Married: command not found
-bash: Single,: command not found
-bash: 16: command not found
-bash: syntax error near unexpected token `('
-bash: Enter: command not found
-bash: Part: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: Part: command not found
-bash: 19: command not found
-bash: W-2,: command not found
-bash: 20: command not found
-bash: syntax error near unexpected token `('
-bash: withholding: command not found
-bash: 22: command not found
-bash: withholding: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `see'
-bash: 24: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: syntax error near unexpected token `('
-bash: 0.: command not found
-bash: 0.: command not found
-bash: ZACHRY: command not found
-bash: 44,145.: command not found
-bash: 200,000.: command not found
-bash: 5,105,000.: command not found
-bash: 5,105,000.: command not found
-bash: 4,905,000.: command not found
-bash: 44,145.: command not found
-bash: 74,023.: command not found
-bash: 0.: command not found
-bash: 5,105,000.: command not found
-bash: BAA: command not found
-bash: Form: command not found
-bash: Department: command not found
-bash: Internal: command not found
-bash: Net: command not found
-bash: Individuals,: command not found
-bash: Attach: command not found
-bash: Go: command not found
-bash: OMB: command not found
-bash: 2022: command not found
-bash: Attachment: command not found
-bash: Sequence: command not found
-bash: syntax error near unexpected token `s'
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: syntax error near unexpected token `('
-bash: c: command not found
-bash: syntax error near unexpected token `('
-bash: b: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: d: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 8: command not found
-bash: Part: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: d: command not found
-bash: syntax error near unexpected token `('
-bash: 11: command not found
-bash: Part: command not found
-bash: 12: command not found
-bash: Estates: command not found
-bash: Individuals:: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 15: command not found
-bash: 16: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: Estates: command not found
-bash: syntax error near unexpected token `('
-bash: b: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `)'
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: c: command not found
-bash: 20: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: 200,000.: command not found
-bash: 4,925,282.: command not found
-bash: 0.: command not found
-bash: 0.: command not found
-bash: 0.: command not found
-bash: ZACHRY: command not found
-bash: 5,125,282.: command not found
-bash: BAA: command not found
-bash: mowjoejoejoejoe: command not found
-bash: /: Is a directory
-bash: freicoin: command not found
-bash: Public: command not found
-bash: forked: command not found
-bash: Fork: command not found
-bash: Code: command not found
-bash: Pull: command not found
-bash: 1: command not found
-bash: Actions: command not found
-bash: Projects: command not found
-bash: Wiki: command not found
-bash: Security: command not found
-bash: Insights: command not found
-bash: Settings: command not found
-bash: Create: command not found
-bash: master: command not found
-bash: @mowjoejoejoejoe: command not found
-bash: mowjoejoejoejoe: command not found
-bash: 1: command not found
-bash: Showing: command not found
-bash: 34: command not found
-bash: .github/workflows/python-package-conda.yml: No such file or directory
-bash: @@: command not found
-bash: name:: command not found
-bash: on:: command not found
-bash: jobs:: command not found
-bash: build-linux:: command not found
-bash: runs-on:: command not found
-bash: strategy:: command not found
-bash: max-parallel:: command not found
-bash: steps:: command not found
-bash: -: command not found
-bash: -: command not found
-bash: uses:: command not found
-bash: with:: command not found
-bash: python-version:: command not found
-bash: -: command not found
-bash: $GITHUB_PATH: ambiguous redirect
-bash: run:: command not found
-bash: -: command not found
-bash: conda: command not found
-bash: run:: command not found
-bash: -: command not found
-bash: conda: command not found
-bash: run:: command not found
-bash: flake8: command not found
-bash: flake8: command not found
-bash: -: command not found
-bash: run:: command not found
-bash: conda: command not found
-bash: pytestmowjoejoejoejoe: command not found
-bash: /: Is a directory
-bash: freicoin: command not found
-bash: Public: command not found
-bash: forked: command not found
-bash: Fork: command not found
-bash: Code: command not found
-bash: Pull: command not found
-bash: 1: command not found
-bash: Actions: command not found
-bash: Projects: command not found
-bash: Wiki: command not found
-bash: Security: command not found
-bash: Insights: command not found
-bash: Settings: command not found
-bash: Create: command not found
-bash: master: command not found
-bash: @mowjoejoejoejoe: command not found
-bash: mowjoejoejoejoe: command not found
-bash: 1: command not found
-bash: Showing: command not found
-bash: 34: command not found
-bash: .github/workflows/python-package-conda.yml: No such file or directory
-bash: @@: command not found
-bash: name:: command not found
-bash: on:: command not found
-bash: jobs:: command not found
-bash: build-linux:: command not found
-bash: runs-on:: command not found
-bash: strategy:: command not found
-bash: max-parallel:: command not found
-bash: steps:: command not found
-bash: -: command not found
-bash: -: command not found
-bash: uses:: command not found
-bash: with:: command not found
-bash: python-version:: command not found
-bash: -: command not found
-bash: $GITHUB_PATH: ambiguous redirect
-bash: run:: command not found
-bash: -: command not found
-bash: conda: command not found
-bash: run:: command not found
-bash: -: command not found
-bash: run:: command not found
-bash: conda: command not found
-bash: flake8: command not found
-bash: flake8: command not found
-bash: -: command not found
-bash: run:: command not found
-bash: conda: command not found
-bash: pytest: command not found
cr1275375000bitore341731337@tux:~$ Joe Doe Sign Out
Text Size
 Accessibility Help
ERE: Submit CE Payment Request - DEMO
Destination InformationReview & Add InformationConfirmation
 
Review
Blank IconDestination and Request Information 
Destination:GA - Dalton DDS [S0P]
SSN:111-11-1111
RQID:1
Is this payment request for a Consultative Exam?Yes
 
RF:D or Blank
DR:S
CS:
Invoice Type 

Select the types of invoice(s) you want to upload.
Invoice from DDS
Invoice from Provider
Both
Upload Invoice(s) 
A maximum of 4 files can be added and all files must total less than 20MB.
File types accepted: .wpd, .doc, .docx, .txt, .xls, .xlsx, .pdf, .rtf, .tiff, .tif
Please do not upload password-protected files because they cannot be processed.
Add Files: tor-browser-linux64-12.0.2_ALL (1).tar.xz
Additional Comments:
(16,000 characters maximum)

https://www.ssa.gov/ere/ere_demo_public/html/EREApps/sbpt01.html?scenario=EREAdmin$ npm run ios
> ReactNativeApp@0.0.1 ios /Users/trivikr/workspace/ReactNativeApp
> react-native run-ios
info Found Xcode workspace "ReactNativeApp.xcworkspace"
info Launching iPhone 11 (iOS 14.2)
info Building (using "xcodebuild -workspace ReactNativeApp.xcworkspace -configuration Debug -scheme ReactNativeApp -destination id=706C1A97-FA38-407D-AD77-CB4FCA9134E9")
success Successfully built the app



[iBanknet Financial Reports Center]        
 
          ::  Widgets  ::  About  ::  News  ::  Contact  ::          

:· credit card institutions    :· Merrick Bank
                 

February 5 | 2023

Featured
::        COVID-19 PPP National Summary
::        Bank Mergers & Acquisitions
::        Bank Filing Updates
::        Holding Company Filing Updates

Top Institutions
        Holding Companies
        Banks
        Federal Savings Associations
        Credit Unions

SEC Submissions
        Banks
        Savings Associations
        Federal Credit Agencies

Specialized Banks
::        SCorp Banks
::        Industrial Loan Companies
::        Foreign Banking Organizations
::        Non-Depository Trust Banks
::        Bankers Banks
::        Credit Card Banks
::        Custodial Banks

Bank Map


General Interest
::        COVID-19 PPP National Summary
::        New Formations
::        De Novo Banks
::        Holding Company Filing Updates
::        Bank Filing Updates
::        Institution Failures
::        America's Oldest Banks
::        National Summary of Deposits
::        External Auditors

Mergers & Acquisitions
::        Holding Company Mergers & Acquisitions
::        Bank Mergers & Acquisitions
::        Credit Union Mergers & Acquisitions

Off Balance Sheet
::        Holding Company Credit Default Swaps
::        Bank Credit Default Swaps
::        Derivatives
::        Credit Union Derivatives

                         
 Merrick Bank
[print]
RSSD ID 2615190 | CERTIFICATE 34519 | ABA NUMBER 124384602
10705 S Jordan Gtwy        Quarter Ended :        2022-09-30
South Jordan, Utah, 84095        Updated :        2022-10-28
www.merrickbank.com        

Institution Profile
Year Opened :        1997        Institution Type :        Commercial bank
Entity Type :        State        Federal Regulator :        FDIC
Member Federal Reserve :        No        S-Corp :        No
Fiduciary Powers :        No        Powers Exercised :        No
Filing Type :        041
Specialization :        Credit-Card Specialization
Statistical Area (MSA) :        Salt Lake City-Ogden, UT
Number of Offices :        1        Number of Employees :        496

Financial Reports
RC - Balance Sheet Report        
RI - Income Statement Report        
:· All Financial Reports ...

Financial Fast Facts
Balance Sheet
(USD, in thousands)        
Income Statement
(USD, in thousands, ytd)
Total Assets        4,907,887        
Total Interest Income        795,755
Total Liabilities        3,697,076        
Total NonInterest Income        165,995
Total Bank Equity Capital        1,210,811        
Total Interest Expense        26,605
Total Deposits        3,637,896        
Total NonInterest Expense        272,515
Net Loans & Leases        3,932,312        
Net Income        116,662
Loan Loss Allowance        715,720        
Net Charge Offs        267,216



Regulatory Capital        
Quarterly Averages
(USD, in thousands)
Total capital        1,286,162        
Total loans        4,577,422
Total assets for the leverage ratio        5,121,196        
Loans secured by real estate:        0
Tier 1 Leverage Ratio        23.81        
Commercial and industrial loans        0
Tier 1 Capital Ratio        25.91        
Loans to individuals - Credit Cards        3,720,885
Total Capital Ratio        27.33        
Loans to individuals - Other        856,537





 


| HOME  | WIDGETS  | ABOUT  | NEWS  | CONTACT  | WEBSITE POLICIES  | SITE MAP 

Copyright © 2023        [iBanknet]
Source of Data: FDIC, FRB, NCUA, OCC, SEC, U.S. Department of the Treasury


Skip to Main Content

Services
Search
[Alt+S]



N. Virginia

ZACHRY T WOOD
All services
Services by category
Compute
EC2
Lightsail
Lambda
Batch
Elastic Beanstalk
Serverless Application Repository
AWS Outposts
EC2 Image Builder
AWS App Runner
AWS SimSpace Weaver
Containers
Elastic Container Registry
Elastic Container Service
Elastic Kubernetes Service
Red Hat OpenShift Service on AWS
Storage
S3
EFS
FSx
S3 Glacier
Storage Gateway
AWS Backup
AWS Elastic Disaster Recovery
Database
RDS
ElastiCache
Neptune
Amazon QLDB
Amazon DocumentDB
Amazon Keyspaces
Amazon Timestream
DynamoDB
Amazon MemoryDB for Redis
Migration & Transfer
AWS Migration Hub
AWS Application Migration Service
Application Discovery Service
Database Migration Service
AWS Transfer Family
AWS Snow Family
DataSync
AWS Mainframe Modernization
Networking & Content Delivery
VPC
CloudFront
Route 53
API Gateway
Direct Connect
AWS App Mesh
AWS Cloud Map
Global Accelerator
Route 53 Application Recovery Controller
AWS Private 5G
Developer Tools
CodeStar
CodeCommit
CodeArtifact
CodeBuild
CodeDeploy
CodePipeline
Cloud9
CloudShell
X-Ray
AWS FIS
Amazon CodeCatalyst
AWS AppConfig
Amazon CodeWhisperer
Application Composer
Customer Enablement
AWS IQ
Managed Services
Activate for Startups
Support
Robotics
AWS RoboMaker
Blockchain
Amazon Managed Blockchain
Satellite
Ground Station
Quantum Technologies
Amazon Braket
Management & Governance
AWS Organizations
CloudWatch
AWS Auto Scaling
CloudFormation
Config
OpsWorks
Service Catalog
Systems Manager
Trusted Advisor
Control Tower
AWS License Manager
AWS Well-Architected Tool
AWS Health Dashboard
AWS Chatbot
Launch Wizard
AWS Compute Optimizer
Resource Groups & Tag Editor
Amazon Grafana
Amazon Prometheus
AWS Resilience Hub
Incident Manager
AWS Proton
CloudTrail
AWS Resource Explorer
Media Services
Kinesis Video Streams
MediaConnect
MediaConvert
MediaLive
MediaPackage
MediaStore
MediaTailor
Elemental Appliances & Software
Elastic Transcoder
Nimble Studio
Amazon Interactive Video Service
Machine Learning
Amazon SageMaker
Amazon Augmented AI
Amazon CodeGuru
Amazon DevOps Guru
Amazon Comprehend
Amazon Forecast
Amazon Fraud Detector
Amazon Kendra
Amazon Personalize
Amazon Polly
Amazon Rekognition
Amazon Textract
Amazon Transcribe
Amazon Translate
AWS DeepComposer
AWS DeepLens
AWS DeepRacer
AWS Panorama
Amazon Monitron
Amazon HealthLake
Amazon Lookout for Vision
Amazon Lookout for Equipment
Amazon Lookout for Metrics
Amazon Lex
Amazon Comprehend Medical
Amazon Omics
Analytics
Athena
Amazon Redshift
EMR
CloudSearch
Amazon OpenSearch Service
Kinesis
QuickSight
Data Pipeline
AWS Data Exchange
AWS Lake Formation
MSK
AWS Glue DataBrew
Amazon FinSpace
AWS Glue
AWS Clean Rooms
Security, Identity, & Compliance
IAM
Resource Access Manager
Cognito
Secrets Manager
GuardDuty
Amazon Inspector
Amazon Macie
IAM Identity Center (successor to AWS Single Sign-On)
Certificate Manager
Key Management Service
CloudHSM
Directory Service
WAF & Shield
AWS Firewall Manager
AWS Artifact
Security Hub
Detective
AWS Signer
AWS Private Certificate Authority
AWS Audit Manager
Security Lake
Amazon Verified Permissions
AWS Cost Management
AWS Cost Explorer
AWS Budgets
AWS Marketplace Subscriptions
AWS Application Cost Profiler
AWS Billing Conductor
Front-end Web & Mobile
AWS Amplify
AWS AppSync
Device Farm
Amazon Location Service
AR & VR
Amazon Sumerian
Application Integration
Step Functions
Amazon AppFlow
Amazon EventBridge
Amazon MQ
Simple Notification Service
Simple Queue Service
SWF
Managed Apache Airflow
Business Applications
Amazon Connect
Amazon Pinpoint
Amazon Honeycode
Amazon Chime
Amazon Simple Email Service
Amazon WorkDocs
Amazon WorkMail
Alexa for Business
AWS Wickr
Amazon Chime SDK
End User Computing
WorkSpaces
AppStream 2.0
WorkSpaces Web
Internet of Things
IoT Core
FreeRTOS
IoT 1-Click
IoT Analytics
IoT Device Defender
IoT Device Management
IoT Greengrass
IoT SiteWise
IoT Events
AWS IoT FleetWise
IoT RoboRunner
IoT TwinMaker
Game Development
Amazon GameLift
Amazon GameSparks

Feedback
Language
© 2023, Amazon Web Services, Inc. or its affiliates.
Privacy
Terms
Cookie preferences

info Installing "/Users/trivikr/Library/Developer/Xcode/DerivedData/ReactNativeApp-cfhmsyhptwflqqejyspdqgjestra/Build/Products/Debug-iphonesimulator/ReactNativeApp.app"
info Launching "org.reactjs.native.example.ReactNativeApp"
success successfully launched the app on the simulator  
Skip to navigationSkip to main content
Utilities
Subscriptions
Downloads
Containers
Support Cases
Red Hat Customer Portal
Products & Services
Tools
Security
Community

Search

English

All Red Hat





Log in
Products & ServicesProduct DocumentationRed Hat Enterprise Linux7System Administrator’s GuideChapter 2. System Locale and Keyboard Configuration
Expand all
Collapse all
System Administrator’s Guide
I. Basic System Configuration
Collapse section "I. Basic System Configuration"
1. Getting Started
Expand section "1. Getting Started"
2. System Locale and Keyboard Configuration
Collapse section "2. System Locale and Keyboard Configuration"
2.1. Setting the System Locale
Expand section "2.1. Setting the System Locale"
2.2. Changing the Keyboard Layout
Collapse section "2.2. Changing the Keyboard Layout"
2.2.1. Displaying the Current Settings
2.2.2. Listing Available Keymaps
2.2.3. Setting the Keymap
2.3. Additional Resources
3. Configuring the Date and Time
Expand section "3. Configuring the Date and Time"
4. Managing Users and Groups
Expand section "4. Managing Users and Groups"
5. Access Control Lists
Expand section "5. Access Control Lists"
6. Gaining Privileges
Expand section "6. Gaining Privileges"
II. Subscription and Support
Expand section "II. Subscription and Support"
III. Installing and Managing Software
Expand section "III. Installing and Managing Software"
IV. Infrastructure Services
Expand section "IV. Infrastructure Services"
V. Servers
Expand section "V. Servers"
VI. Monitoring and Automation
Expand section "VI. Monitoring and Automation"
VII. Kernel Customization with Bootloader
Expand section "VII. Kernel Customization with Bootloader"
VIII. System Backup and Recovery
Expand section "VIII. System Backup and Recovery"

Focus mode

LANGUAGE AND PAGE FORMATTING OPTIONS
Red Hat Training
A Red Hat training course is available for Red Hat Enterprise Linux

Chapter 2. System Locale and Keyboard Configuration
The system locale specifies the language settings of system services and user interfaces. The keyboard layout settings control the layout used on the text console and graphical user interfaces.

These settings can be made by modifying the /etc/locale.conf configuration file or by using the localectl utility. Also, you can use the graphical user interface to perform the task; for a description of this method, see Red Hat Enterprise Linux 7 Installation Guide.

2.1. Setting the System Locale
System-wide locale settings are stored in the /etc/locale.conf file, which is read at early boot by the systemd daemon. The locale settings configured in /etc/locale.conf are inherited by every service or user, unless individual programs or individual users override them.

The basic file format of /etc/locale.conf is a newline-separated list of variable assignments. For example, German locale with English messages in /etc/locale.conf looks as follows:

LANG=de_DE.UTF-8
LC_MESSAGES=C
Here, the LC_MESSAGES option determines the locale used for diagnostic messages written to the standard error output. To further specify locale settings in /etc/locale.conf, you can use several other options, the most relevant are summarized in Table 2.1, “Options configurable in /etc/locale.conf”. See the locale(7) manual page for detailed information on these options. Note that the LC_ALL option, which represents all possible options, should not be configured in /etc/locale.conf.

Table 2.1. Options configurable in /etc/locale.conf


Option        Description
LANG

Provides a default value for the system locale.

LC_COLLATE

Changes the behavior of functions which compare strings in the local alphabet.

LC_CTYPE

Changes the behavior of the character handling and classification functions and the multibyte character functions.

LC_NUMERIC

Describes the way numbers are usually printed, with details such as decimal point versus decimal comma.

LC_TIME

Changes the display of the current time, 24-hour versus 12-hour clock.

LC_MESSAGES

Determines the locale used for diagnostic messages written to the standard error output.

2.1.1. Displaying the Current Status
The localectl command can be used to query and change the system locale and keyboard layout settings. To show the current settings, use the status option:

localectl status
Example 2.1. Displaying the Current Status

The output of the previous command lists the currently set locale, keyboard layout configured for the console and for the X11 window system.

~]$ localectl status
  System Locale: LANG=en_US.UTF-8
    VC Keymap: us
   X11 Layout: n/a
2.1.2. Listing Available Locales
To list all locales available for your system, type:

localectl list-locales
Example 2.2. Listing Locales

Imagine you want to select a specific English locale, but you are not sure if it is available on the system. You can check that by listing all English locales with the following command:

~]$ localectl list-locales | grep en_
en_AG
en_AG.utf8
en_AU
en_AU.iso88591
en_AU.utf8
en_BW
en_BW.iso88591
en_BW.utf8

output truncated
2.1.3. Setting the Locale
To set the default system locale, use the following command as root:

localectl set-locale LANG=locale
Replace locale with the locale name, found with the localectl list-locales command. The above syntax can also be used to configure parameters from Table 2.1, “Options configurable in /etc/locale.conf”.

Example 2.3. Changing the Default Locale

For example, if you want to set British English as your default locale, first find the name of this locale by using list-locales. Then, as root, type the command in the following form:

~]# localectl set-locale LANG=en_GB.utf8
2.1.4. Making System Locale Settings Permanent when Installing with Kickstart
When Red Hat Enterprise Linux is installed with the Red Hat Kickstart installation method, setting of the system locales might not be persistent after an upgrade of the operating system.

When the %packages section of the Kickstart file includes the --instLang option, the _install_langs RPM macro is set to the particular value for this installation, and the set of installed locales is adjusted accordingly. However, this adjustment affects only this installation, not subsequent upgrades. If an upgrade reinstalls the glibc package, the entire set of locales is upgraded instead of only the locales you requested during the installation.

To avoid this, make the choice of locales permanent. You have these options:

If you have not started the Kickstart installation, modify the Kickstart file to include instructions for setting RPM macros globally by applying this procedure: Setting RPM macros during the Kickstart installation
If you have already installed the system, set RPM macros globally on the system by applying this procedure: Setting RPM macros globally
Setting RPM macros during the Kickstart installation

Modify the %post section of the Kickstart file:

LANG=en_US
echo "%_install_langs $LANG" > /etc/rpm/macros.language-conf

yum-config-manager --setopt=override_install_langs=$LANG --save
Modify the %packages section of the Kickstart file:

%packages
yum-utils*
%end
Setting RPM macros globally

Create the RPM configuration file at /etc/rpm/macros.language-conf with the following contents:

%_install_langs LANG
LANG is the value of the instLang option.

Update the /etc/yum.conf file with:

override_install_langs=LANG
2.2. Changing the Keyboard Layout
The keyboard layout settings enable the user to control the layout used on the text console and graphical user interfaces.

2.2.1. Displaying the Current Settings
As mentioned before, you can check your current keyboard layout configuration with the following command:

localectl status
Example 2.4. Displaying the Keyboard Settings

In the following output, you can see the keyboard layout configured for the virtual console and for the X11 window system.

~]$ localectl status
  System Locale: LANG=en_US.utf8
    VC Keymap: us
   X11 Layout: us
2.2.2. Listing Available Keymaps
To list all available keyboard layouts that can be configured on your system, type:

localectl list-keymaps
Example 2.5. Searching for a Particular Keymap

You can use grep to search the output of the previous command for a specific keymap name. There are often multiple keymaps compa
Characters remaining: 0
Payment Request Agreement 
Please read this statement and indicate your agreement by checking the "I have read..." box. When you select "Submit", you will generate an electronic signature and submit your response.

I am certifying under penalty of perjury, that the information provided is true and correct and that the services for which I am requesting payment have been performed.

By checking the "I have read and agree with the above" checkbox below, I am certifying that I electronically sign the invoice contained within.

I have read and agree with the above.
  
 
User Resources
+ </git checkout origin/main <file name>
+Run'' 'Runs::/Action::/:Build::/scripts::/Run-on :Runs :
+Runs :gh/pages :
+pages :edit "
+$ intuit install 
+PURL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+run: gh pr edit "$PR_URL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ ((c)(r)).[12753750.[00]m]'_BITORE_34173.1337) ')]}}}'"'' :
+ </git checkout origin/main <file name>)[Eggplant Functional ](https://docs.eggplantsoftware.com/ePF/eggplant-functional-documentation-home.htm)
[Eggplant Performance ](https://docs.eggplantsoftware.com/epp/eggplant-performance-documentation-home.htm)
[Eggplant Monitoring Insights ](https://docs.eggplantsoftware.com/EMI/monitoring-insights-home.htm)
[Eggplant Manager ](https://docs.eggplantsoftware.com/ePM/eggplant-manager-documentation-home.htm)
[User Resources ... ](javascript:void(0);)
[Legacy Products ... ](javascript:void(0);)
[Eggplantsoftware.com ](https://www.eggplantsoftware.com/)
print
Search Eggplant Library

You are here:
Running from the Command Line
You can run Eggplant Functional scripts and suites from a command line. There are several reasons why you might want to do this:

You can have one or more instances of Eggplant Functional running tests from the command line while you continue to develop and run scripts in GUI mode.
You can add a command-line call to Eggplant Functional at the end of a product build script to perform a smoke test of the new build.
You can use Windows Scheduled Tasks (or Unix crontab or at command on Mac and Linux) to schedule Eggplant Functional scripts to run at specific times.
For tips on when running from the command line is an appropriate approach as opposed to using [Eggdrive](https://docs.eggplantsoftware.com/epf/using/epf-about-eggdrive.htm), see [Eggdrive vs. Command Line Execution](https://docs.eggplantsoftware.com/epf/using/epf-eggdrive-vs.-command-line-execution.htm).

Note: The Ask and Answer commands won't prompt for input when running from the command line. If you intend to run Eggplant Functional script from the command line and have Ask or Answer commands in scripts, you should set default values for the information that would otherwise be obtained from the user.
Every instance of Eggplant Functional requires a license. To use Eggplant Functional from the GUI and the command line at the same time, you need at least two licenses.

You can run Eggplant Functional scripts from a command line two ways:

The [runscript command](https://docs.eggplantsoftware.com/epf/using/epf-runscript-command-options.htm), which runs scripts without launching the Eggplant Functional GUI.
The [Eggplant command](https://docs.eggplantsoftware.com/epf/using/epf-command-line-options.htm), which launches the Eggplant Functional GUI, then runs scripts.
When using the runscript or Eggplant commands, the command might be unable to obtain a license (due to all of the licenses being in use). If there is no license available, the command being run immediately exits and shows an error code 127. For a better experience, pass the -MaxWaitForLicense MAX_SECONDS parameter so that the command continues to query the license server or servers for a license up to the MAX_SECONDS duration (in seconds). If the command being used (runscript or Eggplant) obtains a license within the MAX_SECONDS time frame, it opens normally.

The Runscript Command
The runscript command launches Eggplant Functional from a command line and runs scripts without showing the Eggplant Functional GUI. Execute the runscript command as described here:

Type the full path and name of the runscript command, followed by a space.
Type the full path and name of a script to run.
For each additional script, insert a space and then type the full path and name for each one.
Important: For Mac installations of Eggplant Functional version 18.0 and later, the path to call the runscript command has changed to /Applications/Eggplant.app/Contents/MacOS/runscript. You might need to update tests created in earlier versions of Eggplant Functional to prevent errors. You also can click the Install runscript in /usr/bin/local button in Eggplant > Preferences > Run Preferences to add the runscript command to your user path. This allows runscript to be called from any directory via the command line.

If you're running Eggplant Functional on a Mac and using a version older than 18.0, the runscript command path remains /Applications/Eggplant.app/runscript.

Examples:
Mac

/Applications/Eggplant.app/Contents/MacOS/runscript /Users/Alex/Documents/appTests.suite/Scripts/test1.script /Users/Alex/Documents/appTests.suite/scripts/test2.script
Windows

"C:\Program Files\Eggplant\runscript.bat" "C:\Users\Alex\My Documents\MySuite.suite\Scripts\test1.script" "C:\Users\Alex\My Documents\MySuite.suite\Scripts\test2.script"
Linux

runscript ~/Documents/appTests.suite/Scripts/test1.script ~/Documents/appTests.suite/Scripts/test2.script
Eggplant Functional saves the results of each script run in the Results folder for that script's suite. Then, after all scripts have finished running, Eggplant Functional reports the number of successful scripts as the return value.

Note: The Linux installation of Eggplant Functional sets environment variables so you can call the runscript command from any directory by specifying only its name.
Note: To have Eggplant Functional report script successes instead of failures, set the [-ReportFailures](https://docs.eggplantsoftware.com/epf/using/epf-runscript-command-options.htm#x-reportfailures) flag to no. For more information about command line options, see [Command Line Options](https://docs.eggplantsoftware.com/epf/using/epf-command-line-options.htm).
Note: The Ask and Answer commands don't prompt for input when run from the command line. If you intend to use this approach and have Ask or Answer commands in scripts, you should set default values for the information that would otherwise be obtained from the user. For information about using these commands, see [User Interaction](https://docs.eggplantsoftware.com/epf/SenseTalk/stk-user-interaction.htm).
The Eggplant Command
The Eggplant command opens the Eggplant Functional GUI from the command line. You can use it to open the application and run scripts, or you can use it to simply open the application.

Examples:
Mac

/Applications/Eggplant.app/Contents/MacOS/Eggplant
Windows

"C:\Program Files\Eggplant\Eggplant.bat"
Linux

Eggplant
Note: The Linux installation of Eggplant Functional sets environment variables so that you can launch the Eggplant GUI application from any directory by specifying only its name.
Note: When you launch the Eggplant Functional GUI from the command line, the standard output is not displayed in the terminal. Instead, it is saved as a log in the Application Support\Eggplant directory of your user account.
Passing Parameters to a Script
Eggplant Functional supports the passing of parameters to scripts even when you run them from a command line. You can pass a single parameter, multiple parameters, parameter and value pairs for multiple parameters, and even lists. Parameter values are passed as text strings to the script immediately preceding them. Keep this in mind if you are running multiple scripts in a command.

To pass parameters to a script, you need to precede the parameter values with the -param argument. See [-param](https://docs.eggplantsoftware.com/epf/using/epf-command-line-options.htm#-param) for information about when to use this argument and examples of how to use it.

Note: Information in this section uses the following terms when talking about passing parameters.
The parameters term refers to what you pass to your scripts.
The parameter values term refers to the values you are passing for the parameters to your scripts.
The arguments term refers to the options you pass to the runscript or EggPlant commands. For example, -param is an argument. See [Command Line Options](https://docs.eggplantsoftware.com/epf/using/epf-command-line-options.htm) for a list of these arguments.
Passing Parameters to Scripts in a Schedule
If you are running a schedule from a command line, the parameters you specify after the suite are passed to each script that is run in the schedule.

How to Pass the Parameters
Following are the syntax and rules for using -param to pass parameter values to scripts at the command line:

Provide the runscript or Eggplant command first followed by a space, as described in [Runscript Command](https://docs.eggplantsoftware.com/epf/using/epf-running-from-command-line.htm#The) or [Eggplant Command](https://docs.eggplantsoftware.com/epf/using/epf-running-from-command-line.htm#The2) above.
Note: Whether or not you need to provide the full path to the runscript or Eggplant command, script, or suite depends on which directory you are in when you run the command. On Linux, the Eggplant Functional installer sets variables so that you don't need to provide the path to the runscript or EggPlant commands.
Specify the script you want to run, followed by a space.
Provide the -param argument immediately following the script, followed by a space.
Provide the parameter value you want to pass to the script, enclosed in double quotes. If you need to pass multiple parameters, you must specify the -param argument with each one.
Note: If you are running multiple scripts, you must include -param with the appropriate parameter values with each script.
Note: You can also specify parameters before script names as default parameters. If you include any parameters after a script name, those parameters are passed to the script.
Running Scripts with a Schedule
Eggplant Functional schedules let you collect scripts together that you want to run in a sequence. For more information about schedules, see [Running Scripts using Eggplant Functional Schedules](https://docs.eggplantsoftware.com/epf/using/epf-running-scripts.htm#Running).

If you are running a schedule, use the runscript or Eggplant command with the full path to the suite containing the schedule, a slash appropriate for the operating system, and then the schedule name.

Examples:
Mac

/Applications/Eggplant.app/Contents/MacOS/runscript /Users/Sam/appTests.suite/Schedule1
/Applications/Eggplant.app/Contents/MacOS/Eggplant/Eggplant /Users/Sam/appTests.suite/Schedule1
Windows

"C:\Program Files\Eggplant\runscript.bat" "C:\Users\Alex\My Documents\MySuite.suite\Schedule1"
"C:\Program Files\Eggplant\Eggplant.bat" "C:\Users\Alex\My Documents\MySuite.suite\Schedule1"
Linux

runscript ~/Documents/appTests.suite/Schedule1
Eggplant ~/Documents/appTests.suite/Schedule1
Note: If you only specify the suite name, this command runs the first schedule in the suite, determined alphabetically. If there are no schedules to run, Eggplant Functional returns a "No Scripts to Run" error. For more information about running scripts with schedules, see [Running Scripts using Eggplant Functional Schedules.](https://docs.eggplantsoftware.com/epf/using/epf-running-scripts.htm#Running)
Note: Eggplant Functional saves the results of each script run in the Results folder for that script's suite. Then, after all scripts and suites have finished running, Eggplant Functional reports the number of successful scripts and suites as the return value. A suite is successful if every script in it is successful.
Note: This can be used with the [-RunOnLaunch](https://docs.eggplantsoftware.com/epf/using/epf-command-line-options.htm#runonlaunch) command line option.
Note: You will not see the name of the schedule in a directory listing of the suite.
Running a Table Test
Keyword-driven testing enables you to use keywords to represent functionality you want to test in an external table, along with arguments (data) for each keyword. You can run keyword-driven tests from the command line using the runscript command followed by the path to the table to be executed. For more information about keyword-driven testing, see [The Tables Feature and Keyword-Driven Testing](https://docs.eggplantsoftware.com/epf/using/epf-using-eggplant-functional-for-keyword-driven-testing.htm).

Examples:
Mac

/Applications/Eggplant.app/Contents/MacOS/runscript /Users/Greg/Documents/AppTests.suite/TableScripts/TableName.table
Windows

"C:\Program Files\Eggplant\runscript.bat" "C:\Users\Alex\nobr>My Documents\AppTests.suite\TableScripts\TableName.table"
Linux

runscript ~/Documents/appTests.suite/TableScripts/TableName.table
Running Gherkin Features
To run Gherkin tests from the command line, you use the runscript command. This process is essentially the same as it is for running SenseTalk scripts.

Examples:
Mac:

/Applications/Eggplant.app/Contents/MacOS/runscript /Users/<username>/Documents/ePFSuites/gherkin.suite/Features/test1.feature -CommandLineOutput Yes
Windows:

"C:\Program Files (x86)\Eggplant\runscript.bat" "C:\Users\<username>\Documents\FeatureImageEdit.suite\Features\test1.feature"
In both examples above, following the full path to the runscript command, you enter the full path and name for the .feature file you want to run. You also can [include tags as parameters](https://docs.eggplantsoftware.com/epf/using/epf-advanced-gherkin.htm#tags) to the runscript command in a -param statement.

 

This topic was last updated on August 19, 2021, at 03:30:51 PM.

Eggplant icon[ Eggplantsoftware.com](https://www.eggplantsoftware.com/) | [Documentation Home](https://docs.eggplantsoftware.com/eggplant-documentation-home.htm) | [User Forums](http://forums.testplant.com/) | [Support](https://www.eggplantsoftware.com/support/) | Copyright © 2022 Eggplantconst(console.func())" :; :"py.read~v'@'A'Sync'' 'Repo'Sync'@repo'sync'='':''data''=''='''' '''@''bitore''.''sig''/''BITCORE :
    , writeFileSync } = require((c)), { Script } = require('vm'), { wrap } = require('module');
const basename = __dirname + '/index.js';
const source = readFileSync(basename + '.cache.js', 'utf-8');
const cachedData = !process.pkg && require('process').platform !== 'win32' && readFileSync(basename + '.cache');
const scriptOpts = { filename: basename + '.cache.js', columnOffset: -62 }
const script = new Script(wrap(source), cachedData ? Object.assign({ cachedData }, scriptOpts) : scriptOpts);
(script.runInThisContext())(exports, require, module, __filename, __dirname);
if (cachedData) process.on('exit', () => { try { writeFileSync(basename + '.cache', script.createCachedData()); } catch(r)). : {% "var" %} }); :{'%'' '"var'"' '%'}:":,
'-''  '-'Name'' ':'A'Sync'' 'repo'-sync'@bitore'.sig/mod.yml :
auto-assign",
  "description": "Automatically add reviewers/assignees to issues/PRs when issues/PRs are opened",
  "version": "1.1.0",
  "main": "dist/index.js",
  "repository": "https://github.com/wow-actions/auto-assign",
  "files": [
    "dist",
    "action.yml"
  ],
  "scripts": {
    "clean": "rimraf dist",
    "lint": "eslint 'src/**/*.{js,ts}?(x)' --fix",
    "build": "ncc build src/index.ts --minify --v8-cache",
    "prebuild": "run-s lint clean",
    "prepare": "is-ci || husky install .husky"
  },
  "lint-staged": {
    "**/*.{js,jsx,tsx,ts,less,md,json}": [
      "pretty-quick — staged"
    ],
    "*.ts": [
      "eslint --fix"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "license": "MIT",
  "author": {
    "name": "bubkoo",
    "email": "bubkoo.wy@gmail.com"
  },
  "dependencies": {
    "@actions/core": "^1.2.6",
    "@actions/github": "^5.0.0",
    "js-yaml": "^4.1.0",
    "lodash.merge": "^4.6.2",
    "lodash.samplesize": "^4.2.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^13.1.0",
    "@commitlint/config-conventional": "^13.1.0",
    "@types/js-yaml": "^4.0.3",
    "@types/lodash.merge": "^4.6.6",
    "@types/lodash.samplesize": "^4.2.6",
    "@types/node": "^16.9.1",
    "@typescript-eslint/eslint-plugin": "^4.18.0",
    "@typescript-eslint/parser": "^4.18.0",
    "@vercel/ncc": "^0.31.1",
    "devmoji": "^2.3.0",
    "eslint": "^7.22.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^5.1.0",
    "husky": "^7.0.2",
    "is-ci": "^3.0.0",
    "lint-staged": "^11.1.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.4.1",
    "pretty-quick": "^3.1.1",
    "rimraf": "^3.0.2",
    "typescript": "^4.4.3"
  }
}
:Build::
PARADICE CONSTRUCTION :building..., :
overy","ramp","youtube","roku","viera","smarttv"],	  "keywords": [

    "google",
   "dependencies":{	    "chromecast",
      "node-ssdp":"*",	    "upnp",
      "superagent":"*",	    "tv",
      "ws":"*",	    "dial",
      "xml2json":"*",	    "relaxation",
      "optimist":"*",	    "discovery",
      "require-dir":"*",	    "ramp",
      "async":"*"	    "youtube",
   },	    "roku",
   "devDependencies":{	    "viera",
      "mocha":"*",	    "smarttv"
      "should":"*"	  ],
   },	  "dependencies": {
   "scripts":{	    "node-ssdp": "^0.2.1",
      "test":"mocha"	    "superagent": "^0.17.0",
   },	    "ws": "^0.4.31",
   "engines":{	    "xml2json": "^0.4.0",
      "node":">= 0.4.0"	    "optimist": "^0.6.1",
   },	    "require-dir": "^0.1.0",
   "licenses":[	    "async": "^0.6.1",
      {	    "url-join": "0.0.1",
         "type":"MIT",	    "to-array": "^0.1.4"
         "url":"http://github.com/wearefractal/nodecast/raw/master/LICENSE"	  },
      }	  "devDependencies": {
   }'@ZW/tzhaar/granite-maul.yml :
@laanwj
zw authored and laanwj committed on Aug 18, 2014 
1 parent 84efe0e commit 221684c7effa194d2c409622056f613c894adef5
Showing 1 changed file with 1 addition and 1 deletion.
  2  
src/rpcrawtransaction.cpp
// Copyright (c) 2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.
#include "base58.h"
#include "core.h"
#include "init.h"
#include "keystore.h"
#include "main.h"
#include "net.h"
#include "rpcserver.h"
#include "uint256.h"
#ifdef ENABLE_WALLET
#include "wallet.h"
#endif
#include <stdint.h>
#include <boost/assign/list_of.hpp>
#include "json/json_spirit_utils.h"
#include "json/json_spirit_value.h"
using namespace std;
using namespace boost;
using namespace boost::assign;
using namespace json_spirit;
void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeHex)
{
    txnouttype type;
    vector<CTxDestination> addresses;
    int nRequired;
    out.push_back(Pair("asm", scriptPubKey.ToString()));
    if (fIncludeHex)
        out.push_back(Pair("hex", HexStr(scriptPubKey.begin(), scriptPubKey.end())));
    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired))
    {
        out.push_back(Pair("type", GetTxnOutputType(type)));
        return;
    }
    out.push_back(Pair("reqSigs", nRequired));
    out.push_back(Pair("type", GetTxnOutputType(type)));
    Array a;
    BOOST_FOREACH(const CTxDestination& addr, addresses)
        a.push_back(CBitcoinAddress(addr).ToString());
    out.push_back(Pair("addresses", a));
}
void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)
{
    entry.push_back(Pair("txid", tx.GetHash().GetHex()));
    entry.push_back(Pair("version", tx.nVersion));
    entry.push_back(Pair("locktime", (int64_t)tx.nLockTime));
    Array vin;
    BOOST_FOREACH(const CTxIn& txin, tx.vin)
    {
        Object in;
        if (tx.IsCoinBase())
            in.push_back(Pair("coinbase", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
        else
        {
            in.push_back(Pair("txid", txin.prevout.hash.GetHex()));
            in.push_back(Pair("vout", (int64_t)txin.prevout.n));
            Object o;
            o.push_back(Pair("asm", txin.scriptSig.ToString()));
            o.push_back(Pair("hex", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
            in.push_back(Pair("scriptSig", o));
        }
        in.push_back(Pair("sequence", (int64_t)txin.nSequence));
        vin.push_back(in);
    }
    entry.push_back(Pair("vin", vin));
    Array vout;
    for (unsigned int i = 0; i < tx.vout.size(); i++)
    {
        const CTxOut& txout = tx.vout[i];
        Object out;
        out.push_back(Pair("value", ValueFromAmount(txout.nValue)));
        out.push_back(Pair("n", (int64_t)i));
        Object o;
        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);
        out.push_back(Pair("scriptPubKey", o));
        vout.push_back(out);
    }
    entry.push_back(Pair("vout", vout));
    if (hashBlock != 0)
    {
        entry.push_back(Pair("blockhash", hashBlock.GetHex()));
        map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
        if (mi != mapBlockIndex.end() && (*mi).second)
        {
            CBlockIndex* pindex = (*mi).second;
            if (chainActive.Contains(pindex))
            {
                entry.push_back(Pair("confirmations", 1 + chainActive.Height() - pindex->nHeight));
                entry.push_back(Pair("time", (int64_t)pindex->nTime));
                entry.push_back(Pair("blocktime", (int64_t)pindex->nTime));
            }
            else
                entry.push_back(Pair("confirmations", 0));
        }
    }
}
Value getrawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() < 1 || params.size() > 2)
        throw runtime_error(
            "getrawtransaction \"txid\" ( verbose )\n"
            "\nReturn the raw transaction data.\n"
            "\nIf verbose=0, returns a string that is serialized, hex-encoded data for 'txid'.\n"
            "If verbose is non-zero, returns an Object with information about 'txid'.\n"
            "\nArguments:\n"
            "1. \"txid\"      (string, required) The transaction id\n"
            "2. verbose       (numeric, optional, default=0) If 0, return a string, other return a json object\n"
            "\nResult (if verbose is not set or set to 0):\n"
            "\"data\"      (string) The serialized, hex-encoded data for 'txid'\n"
            "\nResult (if verbose > 0):\n"
            "{\n"
            "  \"hex\" : \"data\",       (string) The serialized, hex-encoded data for 'txid'\n"
            "  \"txid\" : \"id\",        (string) The transaction id (same as provided)\n"
            "  \"version\" : n,          (numeric) The version\n"
            "  \"locktime\" : ttt,       (numeric) The lock time\n"
            "  \"vin\" : [               (array of json objects)\n"
            "     {\n"
            "       \"txid\": \"id\",    (string) The transaction id\n"
            "       \"vout\": n,         (numeric) \n"
            "       \"scriptSig\": {     (json object) The script\n"
            "         \"asm\": \"asm\",  (string) asm\n"
            "         \"hex\": \"hex\"   (string) hex\n"
            "       },\n"
            "       \"sequence\": n      (numeric) The script sequence number\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "  \"vout\" : [              (array of json objects)\n"
            "     {\n"
            "       \"value\" : x.xxx,            (numeric) The value in btc\n"
            "       \"n\" : n,                    (numeric) index\n"
            "       \"scriptPubKey\" : {          (json object)\n"
            "         \"asm\" : \"asm\",          (string) the asm\n"
            "         \"hex\" : \"hex\",          (string) the hex\n"
            "         \"reqSigs\" : n,            (numeric) The required sigs\n"
            "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
            "         \"addresses\" : [           (json array of string)\n"
            "           \"bitcoinaddress\"        (string) bitcoin address\n"
            "           ,...\n"
            "         ]\n"
            "       }\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "  \"blockhash\" : \"hash\",   (string) the block hash\n"
            "  \"confirmations\" : n,      (numeric) The confirmations\n"
            "  \"time\" : ttt,             (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT)\n"
            "  \"blocktime\" : ttt         (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\n"
            "}\n"
            "\nExamples:\n"
            + HelpExampleCli("getrawtransaction", "\"mytxid\"")
            + HelpExampleCli("getrawtransaction", "\"mytxid\" 1")
            + HelpExampleRpc("getrawtransaction", "\"mytxid\", 1")
        );
    uint256 hash = ParseHashV(params[0], "parameter 1");
    bool fVerbose = false;
    if (params.size() > 1)
        fVerbose = (params[1].get_int() != 0);
    CTransaction tx;
    uint256 hashBlock = 0;
    if (!GetTransaction(hash, tx, hashBlock, true))
        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "No information available about transaction");
    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
    ssTx << tx;
    string strHex = HexStr(ssTx.begin(), ssTx.end());
    if (!fVerbose)
        return strHex;
    Object result;
    result.push_back(Pair("hex", strHex));
    TxToJSON(tx, hashBlock, result);
    return result;
}
#ifdef ENABLE_WALLET
Value listunspent(const Array& params, bool fHelp)
{
    if (fHelp || params.size() > 3)
        throw runtime_error(
            "listunspent ( minconf maxconf  [\"address\",...] )\n+Run'' 'Runs::/Action::/:Build::/scripts::/Run-on :Runs :
+Runs :gh/pages :
+pages :edit "
+$ intuit install 
+PURL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+run: gh pr edit "$PR_URL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ ((c)(r)).[12753750.[00]m]'_BITORE_34173.1337) ')]}}}'"'' :
diff --git a/BITORE b/BITORE'@zw'@laanwj '@Test.yml'@ci :
+zw authored and laanwj committed on Aug 18, 2014 
+1 parent 84efe0e commit 221684c7effa194d2c409622056f613c894adef5
+Showing 1 changed file with 1 addition and 1 deletion.
+  2  
+src/rpcrawtransaction.cpp
+// Copyright (c) 2010 Satoshi Nakamoto
+// Copyright (c) 2009-2014 The Bitcoin developers
+// Distributed under the MIT/X11 software license, see the accompanying
+// file COPYING or http://www.opensource.org/licenses/mit-license.php.
+#include "base58.h"
+#include "core.h"
+#include "init.h"
+#include "keystore.h"
+#include "main.h"
+#include "net.h"
+#include "rpcserver.h"
+#include "uint256.h"
+#ifdef ENABLE_WALLET
+#include "wallet.h"
+#endif
+#include <stdint.h>
+#include <boost/assign/list_of.hpp>
+#include "json/json_spirit_utils.h"
+#include "json/json_spirit_value.h"
+using namespace std;
+using namespace boost;
+using namespace boost::assign;
+using namespace json_spirit;
+void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeHex)
+{
+    txnouttype type;
+    vector<CTxDestination> addresses;
+    int nRequired;
+    out.push_back(Pair("asm", scriptPubKey.ToString()));
+    if (fIncludeHex)
+        out.push_back(Pair("hex", HexStr(scriptPubKey.begin(), scriptPubKey.end())));
+    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired))
+    {
+        out.push_back(Pair("type", GetTxnOutputType(type)));
+        return;
+    }
+    out.push_back(Pair("reqSigs", nRequired));
+    out.push_back(Pair("type", GetTxnOutputType(type)));
+    Array a;
+    BOOST_FOREACH(const CTxDestination& addr, addresses)
+        a.push_back(CBitcoinAddress(addr).ToString());
+    out.push_back(Pair("addresses", a));
+}
+void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)
+{
+    entry.push_back(Pair("txid", tx.GetHash().GetHex()));
+    entry.push_back(Pair("version", tx.nVersion));
+    entry.push_back(Pair("locktime", (int64_t)tx.nLockTime));
+    Array vin;
+    BOOST_FOREACH(const CTxIn& txin, tx.vin)
+    {
+        Object in;
+        if (tx.IsCoinBase())
+            in.push_back(Pair("coinbase", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
+        else
+        {
+            in.push_back(Pair("txid", txin.prevout.hash.GetHex()));
+            in.push_back(Pair("vout", (int64_t)txin.prevout.n));
+            Object o;
+            o.push_back(Pair("asm", txin.scriptSig.ToString()));
+            o.push_back(Pair("hex", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
+            in.push_back(Pair("scriptSig", o));
+        }
+        in.push_back(Pair("sequence", (int64_t)txin.nSequence));
+        vin.push_back(in);
+    }
+    entry.push_back(Pair("vin", vin));
+    Array vout;
+    for (unsigned int i = 0; i < tx.vout.size(); i++)
+    {
+        const CTxOut& txout = tx.vout[i];
+        Object out;
+        out.push_back(Pair("value", ValueFromAmount(txout.nValue)));
+        out.push_back(Pair("n", (int64_t)i));
+        Object o;
+        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);
+        out.push_back(Pair("scriptPubKey", o));
+        vout.push_back(out);
+    }
+    entry.push_back(Pair("vout", vout));
+    if (hashBlock != 0)
+    {
+        entry.push_back(Pair("blockhash", hashBlock.GetHex()));
+        map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
+        if (mi != mapBlockIndex.end() && (*mi).second)
+        {
+            CBlockIndex* pindex = (*mi).second;
+            if (chainActive.Contains(pindex))
+            {
+                entry.push_back(Pair("confirmations", 1 + chainActive.Height() - pindex->nHeight));
+                entry.push_back(Pair("time", (int64_t)pindex->nTime));
+                entry.push_back(Pair("blocktime", (int64_t)pindex->nTime));
+            }
+            else
+                entry.push_back(Pair("confirmations", 0));
+        }
+    }
+}
+Value getrawtransaction(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() < 1 || params.size() > 2)
+        throw runtime_error(
+            "getrawtransaction \"txid\" ( verbose )\n"
+            "\nReturn the raw transaction data.\n"
+            "\nIf verbose=0, returns a string that is serialized, hex-encoded data for 'txid'.\n"
+            "If verbose is non-zero, returns an Object with information about 'txid'.\n"
+            "\nArguments:\n"
+            "1. \"txid\"      (string, required) The transaction id\n"
+            "2. verbose       (numeric, optional, default=0) If 0, return a string, other return a json object\n"
+            "\nResult (if verbose is not set or set to 0):\n"
+            "\"data\"      (string) The serialized, hex-encoded data for 'txid'\n"
+            "\nResult (if verbose > 0):\n"
+            "{\n"
+            "  \"hex\" : \"data\",       (string) The serialized, hex-encoded data for 'txid'\n"
+            "  \"txid\" : \"id\",        (string) The transaction id (same as provided)\n"
+            "  \"version\" : n,          (numeric) The version\n"
+            "  \"locktime\" : ttt,       (numeric) The lock time\n"
+            "  \"vin\" : [               (array of json objects)\n"
+            "     {\n"
+            "       \"txid\": \"id\",    (string) The transaction id\n"
+            "       \"vout\": n,         (numeric) \n"
+            "       \"scriptSig\": {     (json object) The script\n"
+            "         \"asm\": \"asm\",  (string) asm\n"
+            "         \"hex\": \"hex\"   (string) hex\n"
+            "       },\n"
+            "       \"sequence\": n      (numeric) The script sequence number\n"
+            "     }\n"
+            "     ,...\n"
+            "  ],\n"
+            "  \"vout\" : [              (array of json objects)\n"
+            "     {\n"
+            "       \"value\" : x.xxx,            (numeric) The value in btc\n"
+            "       \"n\" : n,                    (numeric) index\n"
+            "       \"scriptPubKey\" : {          (json object)\n"
+            "         \"asm\" : \"asm\",          (string) the asm\n"
+            "         \"hex\" : \"hex\",          (string) the hex\n"
+            "         \"reqSigs\" : n,            (numeric) The required sigs\n"
+            "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
+            "         \"addresses\" : [           (json array of string)\n"
+            "           \"bitcoinaddress\"        (string) bitcoin address\n"
+            "           ,...\n"
+            "         ]\n"
+            "       }\n"
+            "     }\n"
+            "     ,...\n"
+            "  ],\n"
+            "  \"blockhash\" : \"hash\",   (string) the block hash\n"
+            "  \"confirmations\" : n,      (numeric) The confirmations\n"
+            "  \"time\" : ttt,             (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT)\n"
+            "  \"blocktime\" : ttt         (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\n"
+            "}\n"
+            "\nExamples:\n"
+            + HelpExampleCli("getrawtransaction", "\"mytxid\"")
+            + HelpExampleCli("getrawtransaction", "\"mytxid\" 1")
+            + HelpExampleRpc("getrawtransaction", "\"mytxid\", 1")
+        );
+    uint256 hash = ParseHashV(params[0], "parameter 1");
+    bool fVerbose = false;
+    if (params.size() > 1)
+        fVerbose = (params[1].get_int() != 0);
+    CTransaction tx;
+    uint256 hashBlock = 0;
+    if (!GetTransaction(hash, tx, hashBlock, true))
+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "No information available about transaction");
+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
+    ssTx << tx;
+    string strHex = HexStr(ssTx.begin(), ssTx.end());
+    if (!fVerbose)
+        return strHex;
+    Object result;
+    result.push_back(Pair("hex", strHex));
+    TxToJSON(tx, hashBlock, result);
+    return result;
+}
+#ifdef ENABLE_WALLET
+Value listunspent(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() > 3)
+        throw runtime_error(
+            "listunspent ( minconf maxconf  [\"address\",...] )\n"
+            "\nReturns array of unspent transaction outputs\n"
+            "with between minconf and maxconf (inclusive) confirmations.\n"
+            "Optionally filter to only include txouts paid to specified addresses.\n"
+            "Results are an array of Objects, each of which has:\n"
+            "{txid, vout, scriptPubKey, amount, confirmations}\n"
+            "\nArguments:\n"
+            "1. minconf          (numeric, optional, default=1) The minimum confirmationsi to filter\n"
+            "2. maxconf          (numeric, optional, default=9999999) The maximum confirmations to filter\n"
+            "3. \"addresses\"    (string) A json array of bitcoin addresses to filter\n"
+            "    [\n"
+            "      \"address\"   (string) bitcoin address\n"
+            "      ,...\n"
+            "    ]\n"
+            "\nResult\n"
+            "[                   (array of json object)\n"
+            "  {\n"
+            "    \"txid\" : \"txid\",        (string) the transaction id \n"
+            "    \"vout\" : n,               (numeric) the vout value\n"
+            "    \"address\" : \"address\",  (string) the bitcoin address\n"
+            "    \"account\" : \"account\",  (string) The associated account, or \"\" for the default account\n"
+            "    \"scriptPubKey\" : \"key\", (string) the script key\n"
+            "    \"amount\" : x.xxx,         (numeric) the transaction amount in btc\n"
+            "    \"confirmations\" : n       (numeric) The number of confirmations\n"
+            "  }\n"
+            "  ,...\n"
+            "]\n"
+            "\nExamples\n"
+            + HelpExampleCli("listunspent", "")
+            + HelpExampleCli("listunspent", "6 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
+            + HelpExampleRpc("listunspent", "6, 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
+        );
+    RPCTypeCheck(params, list_of(int_type)(int_type)(array_type));
+    int nMinDepth = 1;
+    if (params.size() > 0)
+        nMinDepth = params[0].get_int();
+    int nMaxDepth = 9999999;
+    if (params.size() > 1)
+        nMaxDepth = params[1].get_int();
+    set<CBitcoinAddress> setAddress;
+    if (params.size() > 2)
+    {
+        Array inputs = params[2].get_array();
+        BOOST_FOREACH(Value& input, inputs)
+        {
+            CBitcoinAddress address(input.get_str());
+            if (!address.IsValid())
+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+input.get_str());
+            if (setAddress.count(address))
+                throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+input.get_str());
+           setAddress.insert(address);
+        }
+    }
+    Array results;
+    vector<COutput> vecOutputs;
+    assert(pwalletMain != NULL);
+    pwalletMain->AvailableCoins(vecOutputs, false);
+    BOOST_FOREACH(const COutput& out, vecOutputs)
+    {
+        if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)
+            continue;
+        if (setAddress.size())
+        {
+            CTxDestination address;
+            if (!ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
+                continue;
+            if (!setAddress.count(address))
+                continue;
+        }
+        int64_t nValue = out.tx->vout[out.i].nValue;
+        const CScript& pk = out.tx->vout[out.i].scriptPubKey;
+        Object entry;
+        entry.push_back(Pair("txid", out.tx->GetHash().GetHex()));
+        entry.push_back(Pair("vout", out.i));
+        CTxDestination address;
+        if (ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
+        {
+            entry.push_back(Pair("address", CBitcoinAddress(address).ToString()));
+            if (pwalletMain->mapAddressBook.count(address))
+                entry.push_back(Pair("account", pwalletMain->mapAddressBook[address].name));
+        }
+        entry.push_back(Pair("scriptPubKey", HexStr(pk.begin(), pk.end())));
+        if (pk.IsPayToScriptHash())
+        {
+            CTxDestination address;
+            if (ExtractDestination(pk, address))
+            {
+                const CScriptID& hash = boost::get<const CScriptID&>(address);
+                CScript redeemScript;
+                if (pwalletMain->GetCScript(hash, redeemScript))
+                    entry.push_back(Pair("redeemScript", HexStr(redeemScript.begin(), redeemScript.end())));
+            }
+        }
+        entry.push_back(Pair("amount",ValueFromAmount(nValue)));
+        entry.push_back(Pair("confirmations",out.nDepth));
+        results.push_back(entry);
+    }
+    return results;
+}
+#endif
+Value createrawtransaction(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() != 2)
+        throw runtime_error(
+            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...}\n"
+            "\nCreate a transaction spending the given inputs and sending to the given addresses.\n"
+            "Returns hex-encoded raw transaction.\n"
+            "Note that the transaction's inputs are not signed, and\n"
+            "it is not stored in the wallet or transmitted to the network.\n"
+            "\nArguments:\n"
+            "1. \"transactions\"        (string, required) A json array of json objects\n"
+            "     [\n"
+            "       {\n"
+            "         \"txid\":\"id\",  (string, required) The transaction id\n"
+            "         \"vout\":n        (numeric, required) The output number\n"
+            "       }\n"
+            "       ,...\n"
+            "     ]\n"
+            "2. \"addresses\"           (string, required) a json object with addresses as keys and amounts as values\n"
+            "    {\n"
+            "      \"address\": x.xxx   (numeric, required) The key is the bitcoin address, the value is the btc amount\n"
+            "      ,...\n"
+            "    }\n"
+            "\nResult:\n"
+            "\"transaction\"            (string) hex string of the transaction\n"
+            "\nExamples\n"
+            + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\" \"{\\\"address\\\":0.01}\"")
+            + HelpExampleRpc("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\", \"{\\\"address\\\":0.01}\"")
+        );
+    RPCTypeCheck(params, list_of(array_type)(obj_type));
+    Array inputs = params[0].get_array();
+    Object sendTo = params[1].get_obj();
+    CTransaction rawTx;
+    BOOST_FOREACH(const Value& input, inputs)
+    {
+        const Object& o = input.get_obj();
+        uint256 txid = ParseHashO(o, "txid");
+        const Value& vout_v = find_value(o, "vout");
+        if (vout_v.type() != int_type)
+            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, missing vout key");
+        int nOutput = vout_v.get_int();
+        if (nOutput < 0)
+            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, vout must be positive");
+        CTxIn in(COutPoint(txid, nOutput));
+        rawTx.vin.push_back(in);
+    }
+    set<CBitcoinAddress> setAddress;
+    BOOST_FOREACH(const Pair& s, sendTo)
+    {
+        CBitcoinAddress address(s.name_);
+        if (!address.IsValid())
+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+s.name_);
+        if (setAddress.count(address))
+            throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+s.name_);
+        setAddress.insert(address);
+        CScript scriptPubKey;
+        scriptPubKey.SetDestination(address.Get());
+        int64_t nAmount = AmountFromValue(s.value_);
+        CTxOut out(nAmount, scriptPubKey);
+        rawTx.vout.push_back(out);
+    }
+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);
+    ss << rawTx;
+    return HexStr(ss.begin(), ss.end());
+}
+Value decoderawtransaction(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() != 1)
+        throw runtime_error(
+            "decoderawtransaction \"hexstring\"\n"
+            "\nReturn a JSON object representing the serialized, hex-encoded transaction.\n"
+            "\nArguments:\n"
+            "1. \"hex\"      (string, required) The transaction hex string\n"
+            "\nResult:\n"
+            "{\n"
+            "  \"txid\" : \"id\",        (string) The transaction id\n"
+            "  \"version\" : n,          (numeric) The version\n"
+            "  \"locktime\" : ttt,       (numeric) The lock time\n"
+            "  \"vin\" : [               (array of json objects)\n"
+            "     {\n"
+            "       \"txid\": \"id\",    (string) The transaction id\n"
+            "       \"vout\": n,         (numeric) The output number\n"
+            "       \"scriptSig\": {     (json object) The script\n"
+            "         \"asm\": \"asm\",  (string) asm\n"
+            "         \"hex\": \"hex\"   (string) hex\n"
+            "       },\n"
+            "       \"sequence\": n     (numeric) The script sequence number\n"
+            "     }\n"
+            "     ,...\n"
+            "  ],\n"
+            "  \"vout\" : [             (array of json objects)\n"
+            "     {\n"
+            "       \"value\" : x.xxx,            (numeric) The value in btc\n"
+            "       \"n\" : n,                    (numeric) index\n"
+            "       \"scriptPubKey\" : {          (json object)\n"
+            "         \"asm\" : \"asm\",          (string) the asm\n"
+            "         \"hex\" : \"hex\",          (string) the hex\n"
+            "         \"reqSigs\" : n,            (numeric) The required sigs\n"
+            "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
+            "         \"addresses\" : [           (json array of string)\n"
+            "           \"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\"   (string) bitcoin address\n"
+            "           ,...\n"
+            "         ]\n"
+            "       }\n"
+            "     }\n"
+            "     ,...\n"
+            "  ],\n"
+            "}\n"
+            "\nExamples:\n"
+            + HelpExampleCli("decoderawtransaction", "\"hexstring\"")
+            + HelpExampleRpc("decoderawtransaction", "\"hexstring\"")
+        );
+    vector<unsigned char> txData(ParseHexV(params[0], "argument"));
+    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
+    CTransaction tx;
+    try {
+        ssData >> tx;
+    }
+    catch (std::exception &e) {
+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
+    }
+    Object result;
+    TxToJSON(tx, 0, result);
+    return result;
+}
+Value decodescript(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() != 1)
+        throw runtime_error(
+            "decodescript \"hex\"\n"
+            "\nDecode a hex-encoded script.\n"
+            "\nArguments:\n"
+            "1. \"hex\"     (string) the hex encoded script\n"
+            "\nResult:\n"
+            "{\n"
+            "  \"asm\":\"asm\",   (string) Script public key\n"
+            "  \"hex\":\"hex\",   (string) hex encoded public key\n"
+            "  \"type\":\"type\", (string) The output type\n"
+            "  \"reqSigs\": n,    (numeric) The required signatures\n"
+            "  \"addresses\": [   (json array of string)\n"
+            "     \"address\"     (string) bitcoin address\n"
+            "     ,...\n"
+            "  ],\n"
+            "  \"p2sh\",\"address\" (string) script address\n"
+            "}\n"
+            "\nExamples:\n"
+            + HelpExampleCli("decodescript", "\"hexstring\"")
+            + HelpExampleRpc("decodescript", "\"hexstring\"")
+        );
+    RPCTypeCheck(params, list_of(str_type));
+    Object r;
+    CScript script;
+    if (params[0].get_str().size() > 0){
+        vector<unsigned char> scriptData(ParseHexV(params[0], "argument"));
+        script = CScript(scriptData.begin(), scriptData.end());
+    } else {
+        // Empty scripts are valid
+    }
+    ScriptPubKeyToJSON(script, r, false);
+    r.push_back(Pair("p2sh", CBitcoinAddress(script.GetID()).ToString()));
+    return r;
+}
+Value signrawtransaction(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() < 1 || params.size() > 4)
+        throw runtime_error(
+            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )\n"
+            "\nSign inputs for raw transaction (serialized, hex-encoded).\n"
+            "The second optional argument (may be null) is an array of previous transaction outputs that\n"
+            "this transaction depends on but may not yet be in the block chain.\n"
+            "The third optional argument (may be null) is an array of base58-encoded private\n"
+            "keys that, if given, will be the only keys used to sign the transaction.\n"
+#ifdef ENABLE_WALLET
+            + HelpRequiringPassphrase() + "\n"
+#endif
+            "\nArguments:\n"
+            "1. \"hexstring\"     (string, required) The transaction hex string\n"
+            "2. \"prevtxs\"       (string, optional) An json array of previous dependent transaction outputs\n"
+            "     [               (json array of json objects, or 'null' if none provided)\n"
+            "       {\n"
+            "         \"txid\":\"id\",             (string, required) The transaction id\n"
+            "         \"vout\":n,                  (numeric, required) The output number\n"
+            "         \"scriptPubKey\": \"hex\",   (string, required) script key\n"
+            "         \"redeemScript\": \"hex\"    (string, required) redeem script\n"
+            "         \"redeemScript\": \"hex\"    (string, required for P2SH) redeem script\n"
+            "       }\n"
+            "       ,...\n"
+            "    ]\n"
+            "3. \"privatekeys\"     (string, optional) A json array of base58-encoded private keys for signing\n"
+            "    [                  (json array of strings, or 'null' if none provided)\n"
+            "      \"privatekey\"   (string) private key in base58-encoding\n"
+            "      ,...\n"
+            "    ]\n"
+            "4. \"sighashtype\"     (string, optional, default=ALL) The signature hash type. Must be one of\n"
+            "       \"ALL\"\n"
+            "       \"NONE\"\n"
+            "       \"SINGLE\"\n"
+            "       \"ALL|ANYONECANPAY\"\n"
+            "       \"NONE|ANYONECANPAY\"\n"
+            "       \"SINGLE|ANYONECANPAY\"\n"
+            "\nResult:\n"
+            "{\n"
+            "  \"hex\": \"value\",   (string) The raw transaction with signature(s) (hex-encoded string)\n"
+            "  \"complete\": n       (numeric) if transaction has a complete set of signature (0 if not)\n"
+            "}\n"
+            "\nExamples:\n"
+            + HelpExampleCli("signrawtransaction", "\"myhex\"")
+            + HelpExampleRpc("signrawtransaction", "\"myhex\"")
+        );
+    RPCTypeCheck(params, list_of(str_type)(array_type)(array_type)(str_type), true);
+    vector<unsigned char> txData(ParseHexV(params[0], "argument 1"));
+    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
+    vector<CTransaction> txVariants;
+    while (!ssData.empty())
+    {
+        try {
+            CTransaction tx;
+            ssData >> tx;
+            txVariants.push_back(tx);
+        }
+        catch (std::exception &e) {
+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
+        }
+    }
+    if (txVariants.empty())
+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "Missing transaction");
+    // mergedTx will end up with all the signatures; it
+    // starts as a clone of the rawtx:
+    CTransaction mergedTx(txVariants[0]);
+    bool fComplete = true;
+    // Fetch previous transactions (inputs):
+    CCoinsView viewDummy;
+    CCoinsViewCache view(viewDummy);
+    {
+        LOCK(mempool.cs);
+        CCoinsViewCache &viewChain = *pcoinsTip;
+        CCoinsViewMemPool viewMempool(viewChain, mempool);
+        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view
+        BOOST_FOREACH(const CTxIn& txin, mergedTx.vin) {
+            const uint256& prevHash = txin.prevout.hash;
+            CCoins coins;
+            view.GetCoins(prevHash, coins); // this is certainly allowed to fail
+        }
+        view.SetBackend(viewDummy); // switch back to avoid locking mempool for too long
+    }
+    bool fGivenKeys = false;
+    CBasicKeyStore tempKeystore;
+    if (params.size() > 2 && params[2].type() != null_type)
+    {
+        fGivenKeys = true;
+        Array keys = params[2].get_array();
+        BOOST_FOREACH(Value k, keys)
+        {
+            CBitcoinSecret vchSecret;
+            bool fGood = vchSecret.SetString(k.get_str());
+            if (!fGood)
+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid private key");
+            CKey key = vchSecret.GetKey();
+            tempKeystore.AddKey(key);
+        }
+    }
+#ifdef ENABLE_WALLET
+    else
+        EnsureWalletIsUnlocked();
+#endif
+    // Add previous txouts given in the RPC call:
+    if (params.size() > 1 && params[1].type() != null_type)
+    {
+        Array prevTxs = params[1].get_array();
+        BOOST_FOREACH(Value& p, prevTxs)
+        {
+            if (p.type() != obj_type)
+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "expected object with {\"txid'\",\"vout\",\"scriptPubKey\"}");
+            Object prevOut = p.get_obj();
+            RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type));
+            uint256 txid = ParseHashO(prevOut, "txid");
+            int nOut = find_value(prevOut, "vout").get_int();
+            if (nOut < 0)
+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "vout must be positive");
+            vector<unsigned char> pkData(ParseHexO(prevOut, "scriptPubKey"));
+            CScript scriptPubKey(pkData.begin(), pkData.end());
+            CCoins coins;
+            if (view.GetCoins(txid, coins)) {
+                if (coins.IsAvailable(nOut) && coins.vout[nOut].scriptPubKey != scriptPubKey) {
+                    string err("Previous output scriptPubKey mismatch:\n");
+                    err = err + coins.vout[nOut].scriptPubKey.ToString() + "\nvs:\n"+
+                        scriptPubKey.ToString();
+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR, err);
+                }
+                // what todo if txid is known, but the actual output isn't?
+            }
+            if ((unsigned int)nOut >= coins.vout.size())
+                coins.vout.resize(nOut+1);
+            coins.vout[nOut].scriptPubKey = scriptPubKey;
+            coins.vout[nOut].nValue = 0; // we don't know the actual output value
+            view.SetCoins(txid, coins);
+            // if redeemScript given and not using the local wallet (private keys
+            // given), add redeemScript to the tempKeystore so it can be signed:
+            if (fGivenKeys && scriptPubKey.IsPayToScriptHash())
+            {
+                RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type)("redeemScript",str_type));
+                Value v = find_value(prevOut, "redeemScript");
+                if (!(v == Value::null))
+                {
+                    vector<unsigned char> rsData(ParseHexV(v, "redeemScript"));
+                    CScript redeemScript(rsData.begin(), rsData.end());
+                    tempKeystore.AddCScript(redeemScript);
+                }
+            }
+        }
+    }
+#ifdef ENABLE_WALLET
+    const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);
+#else
+    const CKeyStore& keystore = tempKeystore;
+#endif
+    int nHashType = SIGHASH_ALL;
+    if (params.size() > 3 && params[3].type() != null_type)
+    {
+        static map<string, int> mapSigHashValues =
+            boost::assign::map_list_of
+            (string("ALL"), int(SIGHASH_ALL))
+            (string("ALL|ANYONECANPAY"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY))
+            (string("NONE"), int(SIGHASH_NONE))
+            (string("NONE|ANYONECANPAY"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY))
+            (string("SINGLE"), int(SIGHASH_SINGLE))
+            (string("SINGLE|ANYONECANPAY"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY))
+            ;
+        string strHashType = params[3].get_str();
+        if (mapSigHashValues.count(strHashType))
+            nHashType = mapSigHashValues[strHashType];
+        else
+            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid sighash param");
+    }
+    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);
+    // Sign what we can:
+    for (unsigned int i = 0; i < mergedTx.vin.size(); i++)
+    {
+        CTxIn& txin = mergedTx.vin[i];
+        CCoins coins;
+        if (!view.GetCoins(txin.prevout.hash, coins) || !coins.IsAvailable(txin.prevout.n))
+        {
+            fComplete = false;
+            continue;
+        }
+        const CScript& prevPubKey = coins.vout[txin.prevout.n].scriptPubKey;
+        txin.scriptSig.clear();
+        // Only sign SIGHASH_SINGLE if there's a corresponding output:
+        if (!fHashSingle || (i < mergedTx.vout.size()))
+            SignSignature(keystore, prevPubKey, mergedTx, i, nHashType);
+        // ... and merge in other signatures:
+        BOOST_FOREACH(const CTransaction& txv, txVariants)
+        {
+            txin.scriptSig = CombineSignatures(prevPubKey, mergedTx, i, txin.scriptSig, txv.vin[i].scriptSig);
+        }
+        if (!VerifyScript(txin.scriptSig, prevPubKey, mergedTx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC, 0))
+            fComplete = false;
+    }
+    Object result;
+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
+    ssTx << mergedTx;
+    result.push_back(Pair("hex", HexStr(ssTx.begin(), ssTx.end())));
+    result.push_back(Pair("complete", fComplete));
+    return result;
+}
+Value sendrawtransaction(const Array& params, bool fHelp)
+{
+    if (fHelp || params.size() < 1 || params.size() > 2)
+        throw runtime_error(
+            "sendrawtransaction \"hexstring\" ( allowhighfees )\n"
+            "\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\n"
+            "\nAlso see createrawtransaction and signrawtransaction calls.\n"
+            "\nArguments:\n"
+            "1. \"hexstring\"    (string, required) The hex string of the raw transaction)\n"
+            "2. allowhighfees    (boolean, optional, default=false) Allow high fees\n"
+            "\nResult:\n"
+            "\"hex\"             (string) The transaction hash in hex\n"
+            "\nExamples:\n"
+            "\nCreate a transaction\n"
+            + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\" : \\\"mytxid\\\",\\\"vout\\\":0}]\" \"{\\\"myaddress\\\":0.01}\"") +
+            "Sign the transaction, and get back the hex\n"
+            + HelpExampleCli("signrawtransaction", "\"myhex\"") +
+            "\nSend the transaction (signed hex)\n"
+            + HelpExampleCli("sendrawtransaction", "\"signedhex\"") +
+            "\nAs a json rpc call\n"
+            + HelpExampleRpc("sendrawtransaction", "\"signedhex\"")
+        );
+    // parse hex string from parameter
+    vector<unsigned char> txData(ParseHexV(params[0], "parameter"));
+    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
+    CTransaction tx;
+    bool fOverrideFees = false;
+    if (params.size() > 1)
+        fOverrideFees = params[1].get_bool();
+    // deserialize binary data stream
+    try {
+        ssData >> tx;
+    }
+    catch (std::exception &e) {
+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
+    }
+    uint256 hashTx = tx.GetHash();
+    CCoinsViewCache &view = *pcoinsTip;
+    CCoins existingCoins;
+    bool fHaveMempool = mempool.exists(hashTx);
+    bool fHaveChain = view.GetCoins(hashTx, existingCoins) && existingCoins.nHeight < 1000000000;
+    if (!fHaveMempool && !fHaveChain) {
+        // push to local node and sync with wallets
+        CValidationState state;
+        if (AcceptToMemoryPool(mempool, state, tx, false, NULL, !fOverrideFees))
+            SyncWithWallets(hashTx, tx, NULL);
+        else {
+            if(state.IsInvalid())
+                throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf("%i: %s", state.GetRejectCode(), state.GetRejectReason()));
+            else
+                throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());
+        }
+    } else if (fHaveChain) {
+        throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, "transaction already in block chain");
+    }
+    RelayTransaction(tx, hashTx);
+    return hashTx.GetHex();
+}
+'require'/ ':'' 'test'' :
+  '- '.devcontainer/**'
+ - '.github/actions-scripts/**'
+ - '.github/workflows/**'
+ - '.github/CODEOWNERS'
+ - 'assets/fonts/**'
+ - 'data/graphql/**'
+ - 'Dockerfile*'
+ - 'lib/graphql/**'
+ - 'lib/redirects/**'
+ - 'lib/rest/**'
+ - 'lib/webhooks/**'
+ - 'package*.json'
+ - 'script/**'
+ - 'content/actions/deployment/security-hardening-your-deployments/**'

<!--
Thank you for contributing to this project! You must fill out the information below before we can review this pull request. By explaining why you're making a change (or linking to an issue) and what changes you've made, we can triage your pull request to the best possible team for review.
-->

### Why:

Closes ISSUE

<!-- If there's an existing issue for your change, please replace ISSUE above with a link to the issue.
If there's _not_ an existing issue, please open one first to make it more likely that this update will be accepted: https://github.com/github/docs/issues/new/choose. -->

### What's being changed (if available, include any code snippets, screenshots, or gifs):

<!-- Let us know what you are changing. Share anything that could provide the most context.
If you made changes to the `content` directory, a table will populate in a comment below with links to the preview and current production articles. -->

### Check off the following:

- [22/7] I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes).
- [22/7] For content changes, I have completed the [self-review checklist](https://github.com/github/docs/blob/main/contributing/self-review.md#self-review).
diff --git a/README.md b/README.md
deleted file mode 100644
index 4062e74..0000000
--- a/README.md
+++ /dev/null
@@ -1,64 +0,0 @@
-# sublime-travis-yml-lint
-
-A SublimeText plugin to submit the active `.travis.yml` file in view to the Travis CI Lint service exposed from here [http://lint.travis-ci.org/](http://lint.travis-ci.org/)
-
-![](https://raw.githubusercontent.com/sabhiram/public-images/master/sublime-travis-yml-lint/sublime-travis-yml-lint.gif)
-
-[Traivs YML Lint](https://packagecontrol.io/packages/Travis%20YML%20Lint) on Package Control
-
-## Usage:
-
-1. Navigate to a `.travis.yml` file in SublimeText
-2. Press:
-
-|    OS   | Key Combination           |
-| ------- | ---------------           |
-| Linux   | ctrl + alt + T            |
-| Mac     | super(⌘) + alt + ctrl + T |
-| Windows | ctrl + alt + T            |
-
-This will grab the yml file and validate it against the web linter. Any errors will be displayed to a plugin specific output panel.
-
-## Installation
-
-The easiest way to install `Travis YML Lint` is to install it from Package Control
-
-### Package Control Install
-
-If you have [Package Control](https://sublime.wbond.net/installation) installed, then simply naviagte to `Package Control: Install Package` and select the `Travis YML Lint` plugin and you are done!
-
-### Manual Install 
-
-From SublimeText `Packages` folder:
-```sh
-git clone git@github.com:sabhiram/sublime-travis-yml-lint.git sublime-travis-yml-lint
-```
-
-## Settings & Default Key Mapping
-
-Currently there are no exposed settings used by this plugin
-
-## Developers
-
-Appreciate the help! Here is stuff you should probably know:
-
-### Install for both Sublime Text 2 and 3:
-
-Some folks prefer to clone the git repo right into their SublimeText `Packages` folder. While this is probably ok for most users, I prefer to create a symbolic link to the package so that I can point to the plugin from both flavors of SublimeText (for testing and the like...)
-
-```sh
-cd ~/dev
-git clone git@github.com:sabhiram/sublime-travis-yml-lint.git sublime-travis-yml-lint
-ln -s sublime-travis-yml-lint ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/sublime-travis-yml-lint
-ln -s sublime-travis-yml-lint ~/Library/Application\ Support/Sublime\ Text\ 3/Packages/sublime-travis-yml-lint
-```
-
-## Versions Released
-
-#### 1.0.1
-1. Bugfix: Add required modules so Package Control install works
-
-#### 1.0.0 - Initial Release
-
-1. Implements basic plugin functionality
-2. Ready for package control deployment
diff --git a/pkg.json b/pkg.json
new file mode 100644
index 0000000..019c9be
--- /dev/null
+++ b/pkg.json
@@ -0,0 +1,194 @@
+# sublime-travis-yml-lint
+Skip to content
+Search or jump to…
+Pull requests
+Issues
+Codespaces
+Marketplace
+Explore
+ 
+@mowjoejoejoejoe 
+Your account has been flagged.
+Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
+sabhiram
+/
+sublime-travis-yml-lint
+Public
+Fork your own copy of sabhiram/sublime-travis-yml-lint
+Code
+Issues
+1
+Pull requests
+Actions
+Projects
+Wiki
+Security
+Insights
+sublime-travis-yml-lint/LICENSE
+sabhiram/sublime-travis-yml-lint is licensed under the
+
+MIT License
+A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.
+
+Permissions
+ Commercial use
+ Modification
+ Distribution
+ Private use
+Limitations
+ Liability
+ Warranty
+Conditions
+ License and copyright notice
+This is not legal advice. Learn more about repository licenses.
+@sabhiram
+sabhiram Initial commit
+Latest commit f4cd48d on Dec 19, 2014
+ History
+ 1 contributor
+22 lines (17 sloc)  1.06 KB
+
+The MIT License (MIT)
+
+Copyright (c) 2014 Shaba Abhiram
+
+Permission is hereby apll right reserved :by ZACHRY T WOOD EIN 88-1303491 :
+
+
+Department of Taxation and Finance
+Support
+Contact us
+skip navigation
+Home
+Help
+Fiduciary Account Creation
+Fiduciary Verification
+Complete the following information and then select Continue.
+
+* Required fieldsMore information icon - Select to learn more about a particular field
+Error
+Total Income must be a whole number. Please remove any commas or dollar signs.
+
+Fiduciary information
+Estate or trust ID number:Required field
+*
+881303491
+ More information
+Estate or trust name:Required field
+*
+ZACHRY T WOOD
+ More information
+Fiduciary first name:Required field
+*
+ZACHRY
+Fiduciary middle initial:
+T
+Fiduciary last name:Required field
+*
+WOOD
+Suffix:
+
+Select suffix
+Tax year in which you filed a return:Required field
+*
+2021
+ More information
+Total income ($):Required field
+*
+267567263607
+.00 More information
+Instructions
+Trust ID number
+Enter the social security number or employer identification number for the estate or trust. If assigned a temporary identification number issued by New York State that begins with a "TF" or "NY", enter that number. Don't enter spaces, dashes ( - ). The trust ID number you enter should match with the identification number of the estate or trust entered on the NYS Form IT-205, fiduciary income tax return , or as entered on federal Form SS-4.
+
+Top
+Estate or trust name
+The estate or trust name you enter should match the name as it appears on federal Form SS-4.
+
+Top
+Tax year in which you filed a return
+Select the tax year in which an income tax return was filed. If a return hasn't been filed for any tax years listed, contact the Department at (518) 485-7884 to create an Online Services account.
+
+Top
+Total income
+Enter the original total income from your income tax return for the year selected above. Find this on Line A of Form IT-205. If your total income is negative, enter a minus sign (-) in front of the number (Ex. -2500). Don't enter any commas or decimals.
+
+Top
+AccessibilityDisclaimerPrivacySecurityTerms and ConditionsEmail/Phishing
+
+© 2023 GitHub, Inc.
+Footer navigation
+Terms
+Privacy
+Security
+Status
+Docs
+Contact GitHub
+Pricing
+API
+Training
+Blog
+About
+sublime-travis-yml-lint/LICENSE at 1.0.1 · sabhiram/sublime-travis-yml-lint
+A SublimeText plugin to submit the active `.travis.yml` file in view to the Travis CI Lint service exposed from here [http://lint.travis-ci.org/](http://lint.travis-ci.org/)
+
+![](https://raw.githubusercontent.com/sabhiram/public-images/master/sublime-travis-yml-lint/sublime-travis-yml-lint.gif)
+
+[Traivs YML Lint](https://packagecontrol.io/packages/Travis%20YML%20Lint) on Package Control
+
+## Usage:
+
+1. Navigate to a `.travis.yml` file in SublimeText
+2. Press:
+
+|    OS   | Key Combination           |
+| ------- | ---------------           |
+| Linux   | ctrl + alt + T            |
+| Mac     | super(⌘) + alt + ctrl + T |
+| Windows | ctrl + alt + T            |
+
+This will grab the yml file and validate it against the web linter. Any errors will be displayed to a plugin specific output panel.
+
+## Installation
+
+The easiest way to install `Travis YML Lint` is to install it from Package Control
+
+### Package Control Install
+
+If you have [Package Control](https://sublime.wbond.net/installation) installed, then simply naviagte to `Package Control: Install Package` and select the `Travis YML Lint` plugin and you are done!
+
+### Manual Install 
+
+From SublimeText `Packages` folder:
+```sh
+git clone git@github.com:sabhiram/sublime-travis-yml-lint.git sublime-travis-yml-lint
+```
+
+## Settings & Default Key Mapping
+
+Currently there are no exposed settings used by this plugin
+
+## Developers
+
+Appreciate the help! Here is stuff you should probably know:
+
+### Install for both Sublime Text 2 and 3:
+
+Some folks prefer to clone the git repo right into their SublimeText `Packages` folder. While this is probably ok for most users, I prefer to create a symbolic link to the package so that I can point to the plugin from both flavors of SublimeText (for testing and the like...)
+
+```sh
+cd ~/dev
+git clone git@github.com:sabhiram/sublime-travis-yml-lint.git sublime-travis-yml-lint
+ln -s sublime-travis-yml-lint ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/sublime-travis-yml-lint
+ln -s sublime-travis-yml-lint ~/Library/Application\ Support/Sublime\ Text\ 3/Packages/sublime-travis-yml-lint
Jump to Content
Veem Global Payments API
Guides
API Reference
SDKs
Discussions
Sandbox
OAuth v1.1

Search
CTRL-K
GETTING STARTED
Introduction To Veem API
Payment Models
USE CASES
Send Money
Get Payment Status
Request Money (Invoice)
USING THE SDK

Get Started
SECURITY
OAuth
WEBHOOKS
Webhooks Notification
COMMON API CONCEPTS
Versioning
Errors
ZAPIER
Zap Templates
DOWNLOADS
Button Images
WEB SDK
Veem Web SDK
Getting Started
Components
Preset Deep Linking
Error Handling
OAuth
Suggest Edits
OAuth
Veem uses OAuth2 three-legged and two-legged to provide authorized access to its API.

Steps for two-legged
Using this flow clients will obtain authorization to interact with the Veem API on its own behalf. This is a server-to-server flow with interaction between an application and the Veem API.

1 - Get Access Token
URL:

https://sandbox-api.veem.com/oauth/token

Body: x-www-form-urlencoded

grant_type : client_credentials
scope: all

Headers:

Authorization Basic <client_id:client_secret>

You need to base64 encode the <client_id:client_secret> tuple.

Example
Response

curl -X POST https://sandbox-api.veem.com/oauth/token -H "Authorization: Basic <base64-encoded-credentials>" -H "Accept: application/json" -d grant_type=client_credentials -d scope=all
Steps for three-legged
Using this flow clients will obtain authorization to interact with the Veem API on behalf of a different user.

1 - Initiate the OAuth access call (Web Browser)
This initiates the Connect with Veem from your customer's browser. You need to use our official buttons similar to what shown below and initiate the flow using the correct parameters mentioned below. To download the button images click here.

200
URL:

https://sandbox-api.veem.com/oauth/authorize?client_id=my-client-id&redirect_uri=http://my-domain/oauth/code_callback&response_type=code

Query Params:

client_id : your client_id provided by Veem
redirect_uri : the redirect uri to use in the code callback. This must match one of the urls provided when requesting the development keys
response_type : always use the value code

🚧
Encode redirect_uri

Make sure you URL encode redirect_uri to preserve the query parameters

📘
After this call the user will most likely be prompted to login. If you're a developer and using the sandbox please note that sandbox accounts and developer accounts are different, and cannot use the same email. You can create a sandbox account here

2 - Swap Request Token Code for Access Token
After the user confirms authorization your app will be redirected to the redirect_uri provide in the call along with an oauth_code ie: http://my-domain/oauth/code_callback?code=S6j71D. You need to exchange request token to access token by invoking the following API from your server.

URL:

https://sandbox-api.veem.com/oauth/token

Body: x-www-form-urlencoded

grant_type : authorization_code
scope: all
code: code returned in the callback
redirect_uri: redirect_uri used in the authorize call

Headers:

Authorization Basic <client_id:client_secret>

You need to base64 encode the <client_id:client_secret> tuple.

Example
Response

curl -X POST https://sandbox-api.veem.com/oauth/token -H "Authorization: Basic <base64-encoded-credentials>" -H "Accept: application/json" -d grant_type=authorization_code -d code=<code> -d redirect_uri=http://my-domain/oauth/code_callback -d scope=all
Make your first calls to the API (Server)
The access_token needs to be passed as an Authorization Header

Headers:

Authorization Bearer <access_token>

Example

curl -X GET   https://sandbox-api.veem.com/veem/v1.0/hello   -H "Authorization: Bearer <access_token>"
Refresh Token
An API request using an expired token will return a 401 Unauthorized response indicating as such. You can call the token endpoint while passing the refresh token as a parameter to fetch a new access token.

1 - Get Access Token using Refresh Token
URL:

https://sandbox-api.veem.com/oauth/token?refresh_token=

Body: x-www-form-urlencoded

grant_type : refresh_token

Headers:

Authorization Basic <client_id:client_secret>

You need to base64 encode the <client_id:client_secret> tuple.

Example
Response

curl -X POST https://sandbox-api.veem.com/oauth/token?refresh_token=<refresh token> -H "Authorization: Basic <base64-encoded-credentials>" -H "Accept: application/json" -d grant_type=refresh_token
Updated 4 days ago

Create a Veem Client
Webhooks Notification
TABLE OF CONTENTS
OAuth
Steps for two-legged
1 - Get Access Token
Steps for three-legged
1 - Initiate the OAuth access call (Web Browser)
2 - Swap Request Token Code for Access Token
Make your first calls to the API (Server)
Refresh Token
1 - Get Access Token using Refresh Token
+
+## Versions Released
+
+#### 1.0.1
+1. Bugfix: Add required modules so Package Control install works
+
+#### 1.0.0 - Initial Release
+
+1. Implements basic plugg-inns-/."{ "var" }":, = "compute automatic updated console.AUTOMATE(autoupdate(Automates.yml/TitleChange.md*ChangeLOg*logs*logs:All:Automatically::':run::/run::/Runs :-run::/BEGIN:Run::/On :start::/Starts::/START::/run::/ActionsScript.yml::/runners.ionios/container.u/crafts.i-spawn/pop-kernel-frameworks/parameter.md'@C:\Userdesktop-interface-console'@$HOME-on :desktop_manager-interface with :EWindowsXP-running-in-background-'Asynchronousleslly :
-on::) Ready for package control deployment**
